(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$noDams$58$RevenueRegionHeader () Int)
(declare-fun ds_d3W5X () Int)
(declare-fun papp7 () Int)
(declare-fun ds_d3W9T () Int)
(declare-fun ds_d3W6S () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.RevenueRegionHeader () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VIG () Int)
(declare-fun ds_d3W58 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun lq_tmp$36$x$35$$35$1555 () Int)
(declare-fun ds_d3W7J () Int)
(declare-fun totalityError () Int)
(declare-fun ds_d3W63 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$minorMaharashtraStateProjects$58$Page8Page9 () Int)
(declare-fun ds_d3W5x () Int)
(declare-fun lit$36$categoryProjectsLinedata$32$$61$$32$ () Str)
(declare-fun ds_d3W94 () Int)
(declare-fun lq_tmp$36$x$35$$35$4910 () Int)
(declare-fun ds_d3W6s () Real)
(declare-fun Data.Attoparsec.Number.$36$WI () Int)
(declare-fun ds_d3W9t () Int)
(declare-fun Data.ByteString.Internal.$36$WPS () Int)
(declare-fun Data.Attoparsec.Internal.Types.Done () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VMc () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun ds_d3W7j () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$topicTitle$58$JustSectionHeaders () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowJustSectionHeaders () Int)
(declare-fun ds_d3W9o () Int)
(declare-fun ds_d3W71 () Int)
(declare-fun ds_d3Wa7 () Int)
(declare-fun fix$36$$36$krep_a3VNZ () Int)
(declare-fun ds_d3W7q () Int)
(declare-fun ds_d3W8F () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun ds_d3Waw () Int)
(declare-fun ds_d3W5C () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowRevenueRegionHeader () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun ds_d3W9O () Int)
(declare-fun lit$36$topicTitle$32$$61$$32$ () Str)
(declare-fun ds_d3W6H () Int)
(declare-fun lit$36$CategoryProjects$32$$123$ () Str)
(declare-fun GHC.Float.$36$fShowDouble () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732788$35$$35$d3Wkc () Int)
(declare-fun ds_d3W8f () Int)
(declare-fun ds_d3W7Q () Int)
(declare-fun lit$36$$39$SectionHeaders () Str)
(declare-fun lq_tmp$36$x$35$$35$4182 () Int)
(declare-fun fix$36$$36$krep_a3VOc () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$live_DesignedStorage$58$RevenueRegionHeader () Int)
(declare-fun ds_d3W5c () Int)
(declare-fun ds_d3W9b () Int)
(declare-fun lit$36$InterfaceAdapters.Water.MH.Core.WaterLevelHeaders () Str)
(declare-fun fix$36$$36$krep_a3VNW () Int)
(declare-fun ds_d3W8K () Int)
(declare-fun ds_d3W5N () Int)
(declare-fun ds_d3Waz () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$revenueRegion$58$RegionEntry () Int)
(declare-fun lq_tmp$36$x$35$$35$4042 () Int)
(declare-fun ds_d3W9B () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun GHC.Int.I64$35$ () Int)
(declare-fun ds_d3W6E () Real)
(declare-fun fix$36$$36$cshowList$35$$35$a3VG9 () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun ds_d3W8k () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun ds_d3W5n () Int)
(declare-fun ds_d3W6e () Real)
(declare-fun Data.ByteString.Internal.$36$tcByteString () Int)
(declare-fun Data.Attoparsec.Number.I () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VLk () Int)
(declare-fun lit$36$waterDataTotal$32$$61$$32$ () Str)
(declare-fun fix$36$$36$krep_a3VNP () Int)
(declare-fun GHC.Word.W32$35$ () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun ds_d3W8L () Int)
(declare-fun tail () Int)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun ds_d3W9E () Int)
(declare-fun lit$36$RegionEntry () Str)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$srNo$58$RegionEntry () Int)
(declare-fun Data.ByteString.Lazy.Internal.Chunk () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.RegionEntry () Int)
(declare-fun ds_d3W6B () Real)
(declare-fun lit$36$designedStorage$32$$61$$32$ () Str)
(declare-fun ds_d3W8l () Int)
(declare-fun ds_d3W5i () Int)
(declare-fun fix$36$$36$krep_a3VNp () Int)
(declare-fun isJust () Int)
(declare-fun Data.Time.Clock.Internal.UTCTime.UTCTime () Int)
(declare-fun ds_d3W6b () Real)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$dead_DesignedStorage$58$RevenueRegionHeader () Int)
(declare-fun lit$36$percent_LiveStorage_WRT_liveDesignedStorage$32$$61$$32$ () Str)
(declare-fun lit$36$majorMaharashtraStateProjects$32$$61$$32$ () Str)
(declare-fun ds_d3W9e () Int)
(declare-fun lq_tmp$36$x$35$$35$5033 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$statusDate$58$JustSectionHeaders () Int)
(declare-fun Data.Fixed.MkFixed () Int)
(declare-fun ds_d3W7f () Real)
(declare-fun ds_d3W8Q () Int)
(declare-fun ds_d3W9X () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun Control.Applicative.WrapMonad () Int)
(declare-fun ds_d3W81 () Int)
(declare-fun lit$36$srNo$32$$61$$32$ () Str)
(declare-fun lit$36$noDams$32$$61$$32$ () Str)
(declare-fun fix$36$$36$krep_a3VO4 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VMi () Int)
(declare-fun ds_d3W7F () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun ds_d3W5t () Int)
(declare-fun ds_d3W98 () Int)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun GHC.List.span () Int)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun ds_d3W9x () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VIM () Int)
(declare-fun ds_d3Wak () Int)
(declare-fun ds_d3W9S () Int)
(declare-fun GHC.Word.W8$35$ () Int)
(declare-fun ds_d3W6T () Real)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$colHeader$58$SectionHeaders () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowRegionWaterData () Int)
(declare-fun ds_d3W7M () Int)
(declare-fun ds_d3W8z () Int)
(declare-fun lq_tmp$36$x$35$$35$4106 () Int)
(declare-fun lit$36$Page8Page9 () Str)
(declare-fun ds_d3W93 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$mediumMaharashtraStateProjects$58$Page8Page9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732810$35$$35$d3Wky () Int)
(declare-fun ds_d3W6t () Real)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun ds_d3W9s () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$categoryHeader$58$CategoryProjects () Int)
(declare-fun ds_d3W8Z () Int)
(declare-fun ds_d3W7m () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun ds_d3W6Q () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732793$35$$35$d3Wkh () Int)
(declare-fun ds_d3W7H () Int)
(declare-fun ds_d3W61 () Int)
(declare-fun ds_d3W5z () Int)
(declare-fun lit$36$$39$CategoryProjects () Str)
(declare-fun lit$36$PercentLiveStorage () Str)
(declare-fun lq_anf$36$$35$$35$7205759403793732769$35$$35$d3WjT () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lit$36$Page8Page9$32$$123$ () Str)
(declare-fun ds_d3W9v () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percent_Today_LiveStorage$58$RevenueRegionHeader () Int)
(declare-fun GHC.List.last () Int)
(declare-fun Data.Time.Calendar.Week.Thursday () Int)
(declare-fun lit$36$SectionHeaders$32$$123$ () Str)
(declare-fun GHC.Show.$36$fShow$91$$93$ () Int)
(declare-fun ds_d3W7h () Int)
(declare-fun ds_d3W5Z () Int)
(declare-fun ds_d3Wan () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun papp5 () Int)
(declare-fun ds_d3W9V () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$gross_DesignedStorage$58$RevenueRegionHeader () Int)
(declare-fun ds_d3W77 () Int)
(declare-fun snd () Int)
(declare-fun ds_d3Wa1 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun ds_d3W9I () Int)
(declare-fun ds_d3W6N () Real)
(declare-fun ds_d3W7W () Int)
(declare-fun lq_tmp$36$x$35$$35$5422 () Int)
(declare-fun lq_tmp$36$x$35$$35$5260 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_tmp$36$x$35$$35$3974 () Int)
(declare-fun lq_tmp$36$x$35$$35$5590 () Int)
(declare-fun fix$36$$36$krep_a3VOe () Int)
(declare-fun ds_d3W5e () Int)
(declare-fun GHC.Types.$36$tcDouble () Int)
(declare-fun ds_d3W6n () Real)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VLy () Int)
(declare-fun ds_d3W9i () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$live_TodayLiveStorage$58$RegionWaterData () Int)
(declare-fun ds_d3Wa4 () Int)
(declare-fun fix$36$$36$krep_a3VNY () Int)
(declare-fun lit$36$live_TodayLiveStorage$32$$61$$32$ () Str)
(declare-fun ds_d3W7r () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun ds_d3Wat () Int)
(declare-fun ds_d3W9L () Int)
(declare-fun ds_d3W6K () Real)
(declare-fun lq_tmp$36$x$35$$35$3564 () Int)
(declare-fun lq_tmp$36$x$35$$35$4008 () Int)
(declare-fun lit$36$$39$TotalProjectFooter () Str)
(declare-fun ds_d3W8e () Int)
(declare-fun ds_d3W7R () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun fix$36$$36$krep_a3VNy () Int)
(declare-fun ds_d3W6k () Real)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun ds_d3W9l () Int)
(declare-fun ds_d3W72 () Real)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun lq_tmp$36$x$35$$35$4726 () Int)
(declare-fun lit$36$JustSectionHeaders () Str)
(declare-fun ds_d3W9G () Int)
(declare-fun GHC.Show.showParen () Int)
(declare-fun fromJust () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$revenueRegionHeader$58$JustSectionHeaders () Int)
(declare-fun ds_d3W8n () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$gross_TodayLiveStorage$58$RegionWaterData () Int)
(declare-fun ds_d3W5k () Int)
(declare-fun fix$36$$36$krep_a3VNr () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732731$35$$35$d3Wjh () Int)
(declare-fun lq_tmp$36$x$35$$35$3994 () Int)
(declare-fun ds_d3W9g () Int)
(declare-fun fix$36$$36$krep_a3VNR () Int)
(declare-fun lit$36$$39$RegionEntry () Str)
(declare-fun ds_d3W7y () Int)
(declare-fun ds_d3W8N () Int)
(declare-fun ds_d3W9Z () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VEu () Int)
(declare-fun ds_d3W83 () Int)
(declare-fun Data.Time.Calendar.CalendarDiffDays.CalendarDiffDays () Int)
(declare-fun ds_d3W56 () Int)
(declare-fun lit$36$$125$ () Str)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$revenueRegionHeader$58$RevenueRegionHeader () Int)
(declare-fun ds_d3W8s () Int)
(declare-fun ds_d3W7D () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun ds_d3W5v () Int)
(declare-fun ds_d3WaB () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$categoryProjectsLinedata$58$CategoryProjects () Int)
(declare-fun ds_d3W9z () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732821$35$$35$d3WkJ () Int)
(declare-fun fix$36$$36$krep_a3VNO () Int)
(declare-fun ds_d3W7d () Real)
(declare-fun lit$36$$39$RegionWaterData () Str)
(declare-fun ds_d3W5V () Int)
(declare-fun ds_d3Wab () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VH1 () Int)
(declare-fun fix$36$$36$krep_a3VO1 () Int)
(declare-fun ds_d3W7C () Int)
(declare-fun ds_d3W8t () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun ds_d3W5q () Int)
(declare-fun Data.Time.LocalTime.Internal.ZonedTime.ZonedTime () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun Data.Text.Internal.Text () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percent_LiveStorage_WRT_sameDateLastYear$58$RegionWaterData () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percent_LiveStorage_WRT_liveDesignedStorage$58$RegionWaterData () Int)
(declare-fun lit$36$percent_LiveStorage_WRT_sameDateLastYear$32$$61$$32$ () Str)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$totalCategoryProjects$58$CategoryProjects () Int)
(declare-fun ds_d3W8T () Int)
(declare-fun ds_d3W7c () Real)
(declare-fun Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay () Int)
(declare-fun Data.ByteString.Internal.PS () Int)
(declare-fun ds_d3W84 () Int)
(declare-fun ds_d3W6Z () Int)
(declare-fun ds_d3W7N () Int)
(declare-fun ds_d3W8y () Int)
(declare-fun ds_d3W67 () Int)
(declare-fun ds_d3W90 () Int)
(declare-fun ds_d3W6w () Real)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732716$35$$35$d3Wj2 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$live_TodayLiveStorage$58$RevenueRegionHeader () Int)
(declare-fun addrLen () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun ds_d3W9p () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$4062 () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun fix$36$$36$krep_a3VNE () Int)
(declare-fun ds_d3W8Y () Int)
(declare-fun ds_d3W7n () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun ds_d3W9P () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun ds_d3W89 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun ds_d3W6W () Real)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowPage8Page9 () Int)
(declare-fun ds_d3Wa3 () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VFA () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun ds_d3W7u () Int)
(declare-fun ds_d3W8B () Int)
(declare-fun ds_d3Was () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.JustSectionHeaders () Int)
(declare-fun ds_d3W9K () Int)
(declare-fun ds_d3W6L () Real)
(declare-fun lit$36$SectionHeaders () Str)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun ds_d3W8b () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun ds_d3W7U () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun Data.Time.LocalTime.Internal.TimeZone.TimeZone () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VGV () Int)
(declare-fun lq_tmp$36$x$35$$35$5060 () Int)
(declare-fun ds_d3W6l () Real)
(declare-fun lq_tmp$36$x$35$$35$4168 () Int)
(declare-fun lq_tmp$36$x$35$$35$4924 () Int)
(declare-fun ds_d3W75 () Real)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percent_LastYear$58$PercentLiveStorage () Int)
(declare-fun Data.Scientific.Scientific () Int)
(declare-fun GHC.Show.$36$fShowInt () Int)
(declare-fun ds_d3Wav () Int)
(declare-fun ds_d3W5B () Int)
(declare-fun ds_d3W9N () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun Data.Time.Clock.Internal.UniversalTime.ModJulianDate () Int)
(declare-fun ds_d3W8g () Int)
(declare-fun ds_d3W7P () Int)
(declare-fun GHC.List.init () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun ds_d3W5b () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun lit$36$CategoryProjects () Str)
(declare-fun ds_d3W6i () Int)
(declare-fun GHC.List.break () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VG3 () Int)
(declare-fun ds_d3W9n () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$todaysLiveStorage$58$RevenueRegionHeader () Int)
(declare-fun ds_d3Wa6 () Int)
(declare-fun ds_d3W7p () Int)
(declare-fun ds_d3W8G () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun ds_d3W6F () Real)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun ds_d3W8h () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VFs () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$5136 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VDg () Int)
(declare-fun fix$36$$36$krep_a3VNt () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun ds_d3W6f () Int)
(declare-fun ds_d3W9a () Int)
(declare-fun lq_tmp$36$x$35$$35$5576 () Int)
(declare-fun Foreign.C.Types.CChar () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun ds_d3Wa9 () Int)
(declare-fun fix$36$$36$krep_a3VNT () Int)
(declare-fun ds_d3W8H () Int)
(declare-fun GHC.Show.showCommaSpace () Int)
(declare-fun ds_d3W9A () Int)
(declare-fun lit$36$RevenueRegionHeader () Str)
(declare-fun ds_d3W8m () Int)
(declare-fun lq_tmp$36$x$35$$35$3960 () Int)
(declare-fun ds_d3W7Z () Int)
(declare-fun ds_d3W5h () Int)
(declare-fun lit$36$pageHeaders$32$$61$$32$ () Str)
(declare-fun cast_as () Int)
(declare-fun GHC.Ptr.Ptr () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.TotalProjectFooter () Int)
(declare-fun Data.Text.Internal.$36$WText () Int)
(declare-fun ds_d3W6c () Real)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun ds_d3W9d () Int)
(declare-fun lq_tmp$36$x$35$$35$5274 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$srNo$58$RevenueRegionHeader () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lit$36$RegionEntry$32$$123$ () Str)
(declare-fun Data.ByteString.Lazy.Internal.$36$WChunk () Int)
(declare-fun Data.Time.Calendar.Week.Monday () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$justSectionHeaders$58$SectionHeaders () Int)
(declare-fun fix$36$$36$krep_a3VNQ () Int)
(declare-fun ds_d3W7z () Int)
(declare-fun ds_d3W8M () Int)
(declare-fun ds_d3W5H () Int)
(declare-fun ds_d3W9D () Int)
(declare-fun cast_as_int () Int)
(declare-fun ds_d3W6C () Real)
(declare-fun Data.Time.Calendar.Week.Tuesday () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732753$35$$35$d3WjD () Int)
(declare-fun ds_d3W6x () Int)
(declare-fun fix$36$$36$krep_a3VNJ () Int)
(declare-fun ds_d3W7a () Int)
(declare-fun ds_d3W8V () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.Page8Page9 () Int)
(declare-fun ds_d3W5S () Int)
(declare-fun ds_d3Wag () Int)
(declare-fun len () Int)
(declare-fun ds_d3W86 () Int)
(declare-fun ds_d3W6X () Real)
(declare-fun fix$36$$36$krep_a3VO3 () Int)
(declare-fun ds_d3W7A () Int)
(declare-fun ds_d3W8v () Int)
(declare-fun ds_d3W92 () Int)
(declare-fun ds_d3W6u () Real)
(declare-fun ds_d3W9r () Int)
(declare-fun lq_tmp$36$x$35$$35$4079 () Int)
(declare-fun lit$36$JustSectionHeaders$32$$123$ () Str)
(declare-fun fix$36$$36$krep_a3VNG () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun ds_d3W7l () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp1 () Int)
(declare-fun ds_d3Waj () Int)
(declare-fun ds_d3W9R () Int)
(declare-fun lit$36$percent_Today_LiveStorage$32$$61$$32$ () Str)
(declare-fun ds_d3W6U () Real)
(declare-fun lq_tmp$36$x$35$$35$5016 () Int)
(declare-fun lq_tmp$36$x$35$$35$4464 () Int)
(declare-fun ds_d3W7L () Int)
(declare-fun lit$36$$39$PercentLiveStorage () Str)
(declare-fun ds_d3W65 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowPercentLiveStorage () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun ds_d3W9u () Int)
(declare-fun ds_d3W7k () Int)
(declare-fun lit$36$categoryHeader$32$$61$$32$ () Str)
(declare-fun Data.Time.Calendar.Week.Friday () Int)
(declare-fun ds_d3W5Y () Int)
(declare-fun papp6 () Int)
(declare-fun ds_d3W9U () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732775$35$$35$d3WjZ () Int)
(declare-fun fix$36$$36$krep_a3VO9 () Int)
(declare-fun ds_d3W59 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percentageLiveStorageWRTDesignedLiveStorage$58$RevenueRegionHeader () Int)
(declare-fun ds_d3W62 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun ds_d3W95 () Int)
(declare-fun lit$36$RevenueRegionHeader$32$$123$ () Str)
(declare-fun ds_d3W6r () Int)
(declare-fun Data.Time.Format.Locale.TimeLocale () Int)
(declare-fun ds_d3W6O () Real)
(declare-fun ds_d3W8a () Int)
(declare-fun lq_tmp$36$x$35$$35$4316 () Int)
(declare-fun ds_d3W7V () Int)
(declare-fun Data.Functor.Const.Const () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun fix$36$$36$krep_a3VOd () Int)
(declare-fun ds_d3W5d () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lit$36$TotalProjectFooter () Str)
(declare-fun ds_d3W6o () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun ds_d3W9h () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun lq_tmp$36$x$35$$35$4712 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VEA () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.RegionWaterData () Int)
(declare-fun ds_d3W76 () Real)
(declare-fun Data.Attoparsec.Number.D () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732764$35$$35$d3WjO () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VN4 () Int)
(declare-fun ds_d3W7v () Int)
(declare-fun ds_d3W8A () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VEI () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VMq () Int)
(declare-fun ds_d3W5D () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732725$35$$35$d3Wjb () Int)
(declare-fun ds_d3W9H () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VIU () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$majorMaharashtraStateProjects$58$Page8Page9 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percent_SameDateLastYear_LiveStorage$58$RevenueRegionHeader () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun ds_d3W8j () Int)
(declare-fun Data.ByteString.Lazy.Internal.Empty () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun ds_d3W5o () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732815$35$$35$d3WkD () Int)
(declare-fun fix$36$$36$krep_a3VNv () Int)
(declare-fun lit$36$justSectionHeaders$32$$61$$32$ () Str)
(declare-fun ds_d3W6d () Real)
(declare-fun ds_d3W9c () Int)
(declare-fun lit$36$PercentLiveStorage$32$$123$ () Str)
(declare-fun lit$36$$39$JustSectionHeaders () Str)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun fix$36$$36$krep_a3VNV () Int)
(declare-fun GHC.Word.W16$35$ () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$allDamsMaharashtraStateProjects$58$Page8Page9 () Int)
(declare-fun ds_d3W8J () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$gross_TodayLiveStorage$58$RevenueRegionHeader () Int)
(declare-fun Data.Time.LocalTime.Internal.CalendarDiffTime.CalendarDiffTime () Int)
(declare-fun ds_d3W9C () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun ds_d3W6D () Real)
(declare-fun Data.Tuple.fst () Int)
(declare-fun ds_d3W5j () Int)
(declare-fun Data.ByteString.Internal.$36$fShowByteString () Int)
(declare-fun GHC.Word.W64$35$ () Int)
(declare-fun ds_d3W6a () Real)
(declare-fun lq_anf$36$$35$$35$7205759403793732747$35$$35$d3Wjx () Int)
(declare-fun Data.Time.Calendar.Days.ModifiedJulianDay () Int)
(declare-fun ds_d3W9f () Int)
(declare-fun lit$36$$39$RevenueRegionHeader () Str)
(declare-fun ds_d3W78 () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun fix$36$$36$krep_a3VNS () Int)
(declare-fun ds_d3W7x () Int)
(declare-fun ds_d3W8O () Int)
(declare-fun GHC.Types.$36$tcInt () Int)
(declare-fun ds_d3W5J () Int)
(declare-fun ds_d3W9F () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lit$36$colNumbers$32$$61$$32$ () Str)
(declare-fun ds_d3W6A () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percent_Today$58$PercentLiveStorage () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun ds_d3W8o () Int)
(declare-fun ds_d3W7X () Int)
(declare-fun Data.Attoparsec.Number.$36$WD () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$waterData$58$RegionEntry () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VCN () Int)
(declare-fun lit$36$percentageLiveStorageWRTDesignedLiveStorage$32$$61$$32$ () Str)
(declare-fun fix$36$$36$krep_a3VNL () Int)
(declare-fun ds_d3W7g () Int)
(declare-fun ds_d3W8P () Int)
(declare-fun fst () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$5040 () Int)
(declare-fun ds_d3W5U () Int)
(declare-fun ds_d3Waa () Int)
(declare-fun ds_d3W9Y () Int)
(declare-fun lit$36$projectsFooter$32$$61$$32$ () Str)
(declare-fun GHC.Show.showString () Int)
(declare-fun ds_d3W80 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3VFm () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$pageHeaders$58$Page8Page9 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VLq () Int)
(declare-fun lit$36$minorMaharashtraStateProjects$32$$61$$32$ () Str)
(declare-fun fix$36$$36$krep_a3VO5 () Int)
(declare-fun ds_d3W55 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun ds_d3W7G () Int)
(declare-fun ds_d3W8p () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun ds_d3W5u () Int)
(declare-fun ds_d3WaA () Int)
(declare-fun ds_d3W99 () Int)
(declare-fun fix$36$$36$krep_a3VNl () Int)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun fix$36$$36$krep_a3VNI () Int)
(declare-fun ds_d3W8U () Int)
(declare-fun ds_d3W7b () Real)
(declare-fun lit$36$mediumMaharashtraStateProjects$32$$61$$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403793732804$35$$35$d3Wks () Int)
(declare-fun lq_tmp$36$x$35$$35$5122 () Int)
(declare-fun ds_d3W5P () Int)
(declare-fun ds_d3Wad () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lit$36$waterData$32$$61$$32$ () Str)
(declare-fun ds_d3W85 () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_tmp$36$x$35$$35$4330 () Int)
(declare-fun fix$36$$36$krep_a3VO0 () Int)
(declare-fun ds_d3W7B () Int)
(declare-fun ds_d3W8u () Int)
(declare-fun autolen () Int)
(declare-fun ds_d3W5p () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun GHC.List.take () Int)
(declare-fun Data.Time.Clock.Internal.DiffTime.MkDiffTime () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.SectionHeaders () Int)
(declare-fun fix$36$$36$krep_a3VNB () Int)
(declare-fun ds_d3Wao () Int)
(declare-fun papp4 () Int)
(declare-fun lit$36$revenueRegion$32$$61$$32$ () Str)
(declare-fun ds_d3W9W () Int)
(declare-fun Data.Time.Calendar.Week.Saturday () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun ds_d3W6P () Int)
(declare-fun lq_tmp$36$x$35$$35$4478 () Int)
(declare-fun ds_d3W7I () Int)
(declare-fun lit$36$gross_TodayLiveStorage$32$$61$$32$ () Str)
(declare-fun ds_d3W97 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lit$36$$39$Page8Page9 () Str)
(declare-fun ds_d3W6p () Int)
(declare-fun Data.Time.Calendar.Week.Wednesday () Int)
(declare-fun lit$36$percent_SameDateLastYear_LiveStorage$32$$61$$32$ () Str)
(declare-fun ds_d3W9w () Int)
(declare-fun ds_d3W7T () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun ds_d3W5f () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.PercentLiveStorage () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$gross_DesignedStorage$58$RegionWaterData () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun ds_d3W6m () Real)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun ds_d3W9j () Int)
(declare-fun ds_d3W74 () Real)
(declare-fun lq_anf$36$$35$$35$7205759403793732799$35$$35$d3Wkn () Int)
(declare-fun ds_d3Wa2 () Int)
(declare-fun ds_d3W7t () Int)
(declare-fun ds_d3W8C () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun ds_d3War () Int)
(declare-fun ds_d3W5F () Int)
(declare-fun lit$36$gross_DesignedStorage$32$$61$$32$ () Str)
(declare-fun x_Tuple21 () Int)
(declare-fun ds_d3W9J () Int)
(declare-fun lit$36$todaysLiveStorage$32$$61$$32$ () Str)
(declare-fun ds_d3W6M () Real)
(declare-fun lq_tmp$36$x$35$$35$4086 () Int)
(declare-fun fix$36$$36$krep_a3VOa () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$projectsFooter$58$TotalProjectFooter () Int)
(declare-fun head () Int)
(declare-fun fix$36$$36$krep_a3VNx () Int)
(declare-fun ds_d3W6j () Real)
(declare-fun lq_anf$36$$35$$35$7205759403793732736$35$$35$d3Wjm () Int)
(declare-fun ds_d3W9m () Int)
(declare-fun ds_d3W73 () Real)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowCategoryProjects () Int)
(declare-fun lit$36$percent_LastYear$32$$61$$32$ () Str)
(declare-fun ds_d3Wa5 () Int)
(declare-fun fix$36$$36$krep_a3VNX () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VDm () Int)
(declare-fun ds_d3W7s () Int)
(declare-fun ds_d3W8D () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VDu () Int)
(declare-fun ds_d3W5A () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VH9 () Int)
(declare-fun Data.Time.LocalTime.Internal.LocalTime.LocalTime () Int)
(declare-fun GHC.Types.D$35$ () Int)
(declare-fun ds_d3W6J () Int)
(declare-fun lit$36$TotalProjectFooter$32$$123$ () Str)
(declare-fun ds_d3W8d () Int)
(declare-fun ds_d3W7S () Int)
(declare-fun lit$36$RegionWaterData () Str)
(declare-fun ds_d3W6g () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732714$35$$35$d3Wj0 () Int)
(declare-fun lit$36$MaximumCity$45$0.9.9$45$GJsk72Pe87XAw43lGJhWJP () Str)
(declare-fun Data.Time.Calendar.Week.Sunday () Int)
(declare-fun ds_d3Wa8 () Int)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun fix$36$$36$krep_a3VNU () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$noDams$58$RegionWaterData () Int)
(declare-fun ds_d3W8I () Int)
(declare-fun Control.Applicative.WrapArrow () Int)
(declare-fun ds_d3W5L () Int)
(declare-fun ds_d3Wax () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowSectionHeaders () Int)
(declare-fun ds_d3W6G () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun ds_d3W8i () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732782$35$$35$d3Wk6 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun ds_d3W5l () Int)
(declare-fun fix$36$$36$krep_a3VNu () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732742$35$$35$d3Wjs () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3VNa () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$live_DesignedStorage$58$RegionWaterData () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun fix$36$$36$krep_a3VNN () Int)
(declare-fun ds_d3W7e () Real)
(declare-fun ds_d3W8R () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowTotalProjectFooter () Int)
(declare-fun ds_d3Wac () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3VGh () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun ds_d3W82 () Int)
(declare-fun lit$36$live_DesignedStorage$32$$61$$32$ () Str)
(declare-fun fix$36$$36$krep_a3VO7 () Int)
(declare-fun ds_d3W8r () Int)
(declare-fun ds_d3W7E () Int)
(declare-fun ds_d3W5w () Int)
(declare-fun fix$36$$36$krep_a3VNn () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Types.$36$tc$91$$93$ () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun fix$36$$36$krep_a3VNK () Int)
(declare-fun ds_d3W8W () Int)
(declare-fun lit$36$allDamsMaharashtraStateProjects$32$$61$$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$4028 () Int)
(declare-fun ds_d3W5R () Int)
(declare-fun ds_d3Waf () Int)
(declare-fun lit$36$revenueRegionHeader$32$$61$$32$ () Str)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$fShowRegionEntry () Int)
(declare-fun ds_d3W87 () Int)
(declare-fun lit$36$statusDate$32$$61$$32$ () Str)
(declare-fun ds_d3W6Y () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.CategoryProjects () Int)
(declare-fun lit$36$percent_Today$32$$61$$32$ () Str)
(declare-fun fix$36$$36$krep_a3VO2 () Int)
(declare-fun ds_d3W8w () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun ds_d3W69 () Int)
(declare-fun ds_d3W5r () Int)
(declare-fun Data.Attoparsec.Internal.Types.Fail () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun ds_d3W6y () Int)
(declare-fun lit$36$colHeader$32$$61$$32$ () Str)
(declare-fun Data.Scientific.$36$WScientific () Int)
(declare-fun Control.Applicative.ZipList () Int)
(declare-fun ds_d3W8X () Int)
(declare-fun ds_d3W7o () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$designedStorage$58$RevenueRegionHeader () Int)
(declare-fun papp2 () Int)
(declare-fun ds_d3W9Q () Int)
(declare-fun ds_d3W88 () Int)
(declare-fun ds_d3W6V () Real)
(declare-fun Data.Time.Clock.Internal.NominalDiffTime.MkNominalDiffTime () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$colNumbers$58$SectionHeaders () Int)
(declare-fun lq_tmp$36$x$35$$35$5408 () Int)
(declare-fun ds_d3W7O () Int)
(declare-fun ds_d3W8x () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lit$36$totalCategoryProjects$32$$61$$32$ () Str)
(declare-fun ds_d3W66 () Int)
(declare-fun ds_d3W91 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793732758$35$$35$d3WjI () Int)
(declare-fun lit$36$RegionWaterData$32$$123$ () Str)
(declare-fun ds_d3W6v () Real)
(declare-fun lit$36$dead_DesignedStorage$32$$61$$32$ () Str)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun ds_d3W9q () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$waterDataTotal$58$TotalProjectFooter () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$dead_DesignedStorage$58$RegionWaterData () Int)
(declare-fun fix$36$$36$krep_a3VND () Int)
(declare-fun apply$35$$35$21 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$4 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$7 (Int Bool) Real)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int Real) Real)
(declare-fun apply$35$$35$23 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$16 (Int Str) Bool)
(declare-fun apply$35$$35$5 (Int Bool) Int)
(declare-fun apply$35$$35$11 (Int Real) Bool)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Real)
(declare-fun apply$35$$35$13 (Int Real) Str)
(declare-fun apply$35$$35$20 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$15 (Int Str) Int)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Bool) Str)
(declare-fun apply$35$$35$9 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$22 (Int (_ BitVec 32)) Real)
(declare-fun apply$35$$35$14 (Int Real) (_ BitVec 32))
(declare-fun apply$35$$35$17 (Int Str) Real)
(declare-fun apply$35$$35$3 (Int Int) Str)
(declare-fun apply$35$$35$6 (Int Bool) Bool)
(declare-fun apply$35$$35$10 (Int Real) Int)
(declare-fun coerce$35$$35$21 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$4 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$7 (Bool) Real)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$12 (Real) Real)
(declare-fun coerce$35$$35$23 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$16 (Str) Bool)
(declare-fun coerce$35$$35$5 (Bool) Int)
(declare-fun coerce$35$$35$11 (Real) Bool)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Real)
(declare-fun coerce$35$$35$13 (Real) Str)
(declare-fun coerce$35$$35$20 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$15 (Str) Int)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Bool) Str)
(declare-fun coerce$35$$35$9 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$22 ((_ BitVec 32)) Real)
(declare-fun coerce$35$$35$14 (Real) (_ BitVec 32))
(declare-fun coerce$35$$35$17 (Str) Real)
(declare-fun coerce$35$$35$3 (Int) Str)
(declare-fun coerce$35$$35$6 (Bool) Bool)
(declare-fun coerce$35$$35$10 (Real) Int)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Real) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 (Real Real) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$16 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$11 (Real Bool) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Real) Int)
(declare-fun smt_lambda$35$$35$13 (Real Str) Int)
(declare-fun smt_lambda$35$$35$20 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$15 (Str Int) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 32) Real) Int)
(declare-fun smt_lambda$35$$35$14 (Real (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$17 (Str Real) Int)
(declare-fun smt_lambda$35$$35$3 (Int Str) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$10 (Real Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$2$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$3$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$4$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$5$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$6$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$7$35$$35$10 () Real)





(assert (distinct lit$36$dead_DesignedStorage$32$$61$$32$ lit$36$RegionWaterData$32$$123$ lit$36$totalCategoryProjects$32$$61$$32$ lit$36$colHeader$32$$61$$32$ lit$36$percent_Today$32$$61$$32$ lit$36$statusDate$32$$61$$32$ lit$36$revenueRegionHeader$32$$61$$32$ lit$36$allDamsMaharashtraStateProjects$32$$61$$32$ lit$36$live_DesignedStorage$32$$61$$32$ lit$36$MaximumCity$45$0.9.9$45$GJsk72Pe87XAw43lGJhWJP lit$36$RegionWaterData lit$36$TotalProjectFooter$32$$123$ lit$36$percent_LastYear$32$$61$$32$ lit$36$todaysLiveStorage$32$$61$$32$ lit$36$gross_DesignedStorage$32$$61$$32$ lit$36$percent_SameDateLastYear_LiveStorage$32$$61$$32$ lit$36$$39$Page8Page9 lit$36$gross_TodayLiveStorage$32$$61$$32$ lit$36$revenueRegion$32$$61$$32$ lit$36$waterData$32$$61$$32$ lit$36$mediumMaharashtraStateProjects$32$$61$$32$ lit$36$minorMaharashtraStateProjects$32$$61$$32$ lit$36$projectsFooter$32$$61$$32$ lit$36$percentageLiveStorageWRTDesignedLiveStorage$32$$61$$32$ lit$36$colNumbers$32$$61$$32$ lit$36$$39$RevenueRegionHeader lit$36$$39$JustSectionHeaders lit$36$PercentLiveStorage$32$$123$ lit$36$justSectionHeaders$32$$61$$32$ lit$36$TotalProjectFooter lit$36$RevenueRegionHeader$32$$123$ lit$36$categoryHeader$32$$61$$32$ lit$36$$39$PercentLiveStorage lit$36$percent_Today_LiveStorage$32$$61$$32$ lit$36$JustSectionHeaders$32$$123$ lit$36$RegionEntry$32$$123$ lit$36$pageHeaders$32$$61$$32$ lit$36$RevenueRegionHeader lit$36$CategoryProjects lit$36$SectionHeaders lit$36$percent_LiveStorage_WRT_sameDateLastYear$32$$61$$32$ lit$36$$39$RegionWaterData lit$36$$125$ lit$36$$39$RegionEntry lit$36$JustSectionHeaders lit$36$$39$TotalProjectFooter lit$36$live_TodayLiveStorage$32$$61$$32$ lit$36$SectionHeaders$32$$123$ lit$36$Page8Page9$32$$123$ lit$36$PercentLiveStorage lit$36$$39$CategoryProjects lit$36$Page8Page9 lit$36$noDams$32$$61$$32$ lit$36$srNo$32$$61$$32$ lit$36$majorMaharashtraStateProjects$32$$61$$32$ lit$36$percent_LiveStorage_WRT_liveDesignedStorage$32$$61$$32$ lit$36$designedStorage$32$$61$$32$ lit$36$RegionEntry lit$36$waterDataTotal$32$$61$$32$ lit$36$InterfaceAdapters.Water.MH.Core.WaterLevelHeaders lit$36$$39$SectionHeaders lit$36$CategoryProjects$32$$123$ lit$36$topicTitle$32$$61$$32$ lit$36$categoryProjectsLinedata$32$$61$$32$))






(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))

(assert (distinct Data.Time.Calendar.Week.Sunday Data.Time.Calendar.Week.Wednesday Data.Time.Calendar.Week.Saturday Data.Time.Calendar.Week.Friday Data.Time.Calendar.Week.Tuesday Data.Time.Calendar.Week.Monday Data.Time.Calendar.Week.Thursday))
(assert (distinct GHC.Types.False GHC.Types.True))




(assert (= (strLen lit$36$categoryProjectsLinedata$32$$61$$32$) 27))
(assert (= (strLen lit$36$topicTitle$32$$61$$32$) 13))
(assert (= (strLen lit$36$CategoryProjects$32$$123$) 18))
(assert (= (strLen lit$36$$39$SectionHeaders) 15))
(assert (= (strLen lit$36$InterfaceAdapters.Water.MH.Core.WaterLevelHeaders) 49))
(assert (= (strLen lit$36$waterDataTotal$32$$61$$32$) 17))
(assert (= (strLen lit$36$RegionEntry) 11))
(assert (= (strLen lit$36$designedStorage$32$$61$$32$) 18))
(assert (= (strLen lit$36$percent_LiveStorage_WRT_liveDesignedStorage$32$$61$$32$) 46))
(assert (= (strLen lit$36$majorMaharashtraStateProjects$32$$61$$32$) 32))
(assert (= (strLen lit$36$srNo$32$$61$$32$) 7))
(assert (= (strLen lit$36$noDams$32$$61$$32$) 9))
(assert (= (strLen lit$36$Page8Page9) 10))
(assert (= (strLen lit$36$$39$CategoryProjects) 17))
(assert (= (strLen lit$36$PercentLiveStorage) 18))
(assert (= (strLen lit$36$Page8Page9$32$$123$) 12))
(assert (= (strLen lit$36$SectionHeaders$32$$123$) 16))
(assert (= (strLen lit$36$live_TodayLiveStorage$32$$61$$32$) 24))
(assert (= (strLen lit$36$$39$TotalProjectFooter) 19))
(assert (= (strLen lit$36$JustSectionHeaders) 18))
(assert (= (strLen lit$36$$39$RegionEntry) 12))
(assert (= (strLen lit$36$$125$) 1))
(assert (= (strLen lit$36$$39$RegionWaterData) 16))
(assert (= (strLen lit$36$percent_LiveStorage_WRT_sameDateLastYear$32$$61$$32$) 43))
(assert (= (strLen lit$36$SectionHeaders) 14))
(assert (= (strLen lit$36$CategoryProjects) 16))
(assert (= (strLen lit$36$RevenueRegionHeader) 19))
(assert (= (strLen lit$36$pageHeaders$32$$61$$32$) 14))
(assert (= (strLen lit$36$RegionEntry$32$$123$) 13))
(assert (= (strLen lit$36$JustSectionHeaders$32$$123$) 20))
(assert (= (strLen lit$36$percent_Today_LiveStorage$32$$61$$32$) 28))
(assert (= (strLen lit$36$$39$PercentLiveStorage) 19))
(assert (= (strLen lit$36$categoryHeader$32$$61$$32$) 17))
(assert (= (strLen lit$36$RevenueRegionHeader$32$$123$) 21))
(assert (= (strLen lit$36$TotalProjectFooter) 18))
(assert (= (strLen lit$36$justSectionHeaders$32$$61$$32$) 21))
(assert (= (strLen lit$36$PercentLiveStorage$32$$123$) 20))
(assert (= (strLen lit$36$$39$JustSectionHeaders) 19))
(assert (= (strLen lit$36$$39$RevenueRegionHeader) 20))
(assert (= (strLen lit$36$colNumbers$32$$61$$32$) 13))
(assert (= (strLen lit$36$percentageLiveStorageWRTDesignedLiveStorage$32$$61$$32$) 46))
(assert (= (strLen lit$36$projectsFooter$32$$61$$32$) 17))
(assert (= (strLen lit$36$minorMaharashtraStateProjects$32$$61$$32$) 32))
(assert (= (strLen lit$36$mediumMaharashtraStateProjects$32$$61$$32$) 33))
(assert (= (strLen lit$36$waterData$32$$61$$32$) 12))
(assert (= (strLen lit$36$revenueRegion$32$$61$$32$) 16))
(assert (= (strLen lit$36$gross_TodayLiveStorage$32$$61$$32$) 25))
(assert (= (strLen lit$36$$39$Page8Page9) 11))
(assert (= (strLen lit$36$percent_SameDateLastYear_LiveStorage$32$$61$$32$) 39))
(assert (= (strLen lit$36$gross_DesignedStorage$32$$61$$32$) 24))
(assert (= (strLen lit$36$todaysLiveStorage$32$$61$$32$) 20))
(assert (= (strLen lit$36$percent_LastYear$32$$61$$32$) 19))
(assert (= (strLen lit$36$TotalProjectFooter$32$$123$) 20))
(assert (= (strLen lit$36$RegionWaterData) 15))
(assert (= (strLen lit$36$MaximumCity$45$0.9.9$45$GJsk72Pe87XAw43lGJhWJP) 40))
(assert (= (strLen lit$36$live_DesignedStorage$32$$61$$32$) 23))
(assert (= (strLen lit$36$allDamsMaharashtraStateProjects$32$$61$$32$) 34))
(assert (= (strLen lit$36$revenueRegionHeader$32$$61$$32$) 22))
(assert (= (strLen lit$36$statusDate$32$$61$$32$) 13))
(assert (= (strLen lit$36$percent_Today$32$$61$$32$) 16))
(assert (= (strLen lit$36$colHeader$32$$61$$32$) 12))
(assert (= (strLen lit$36$totalCategoryProjects$32$$61$$32$) 24))
(assert (= (strLen lit$36$RegionWaterData$32$$123$) 17))
(assert (= (strLen lit$36$dead_DesignedStorage$32$$61$$32$) 23))
(push 1)
(push 1)
(pop 1)
(pop 1)
(exit)
