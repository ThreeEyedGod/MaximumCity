(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun papp7 () Int)
(declare-fun Data.Aeson.Types.FromJSON.$36$fFromJSONText0 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_tmp$36$x$35$$35$3906 () Int)
(declare-fun lq_tmp$36$x$35$$35$5212 () Int)
(declare-fun lq_tmp$36$x$35$$35$5009 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558085$35$$35$d3cSp () Int)
(declare-fun ds_d3cPq () Int)
(declare-fun lq_tmp$36$x$35$$35$2327 () Int)
(declare-fun Web.Telegram.API.Bot.Data.chat_id () Int)
(declare-fun lq_tmp$36$x$35$$35$4954 () Int)
(declare-fun totalityError () Int)
(declare-fun lq_tmp$36$x$35$$35$4660 () Int)
(declare-fun ds_d3cP1 () Int)
(declare-fun lq_tmp$36$x$35$$35$3373 () Int)
(declare-fun ds_d3cM4 () Int)
(declare-fun Servant.Client.Core.ClientError.InvalidContentTypeHeader () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.getMeta () Int)
(declare-fun Data.ByteString.Internal.$36$WPS () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun Web.Telegram.API.Bot.Data.InlineQuery () Int)
(declare-fun InterfaceAdapters.Preferences.parsePrefs () Int)
(declare-fun GHC.Base.$36$fFunctorIO () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558063$35$$35$d3cS3 () Bool)
(declare-fun GHC.List.reverse () Int)
(declare-fun lit$36$getMeta$32$no$32$data () Str)
(declare-fun Web.Telegram.API.Bot.Data.Chat () Int)
(declare-fun InterfaceAdapters.Utils.Helper.SomeIOError () Int)
(declare-fun Web.Telegram.API.Bot.Data.from () Int)
(declare-fun Debug.Trace.trace () Int)
(declare-fun ds_d3cKY () Int)
(declare-fun lq_tmp$36$x$35$$35$3721 () Int)
(declare-fun ds_d3cPj () Int)
(declare-fun Web.Telegram.API.Bot.Data.chat () Int)
(declare-fun Web.Telegram.API.Bot.Requests.ChatChannel () Int)
(declare-fun Data.Text.Encoding.Error.DecodeError () Int)
(declare-fun fix$36$$36$dFunctor_a3cEw () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558153$35$$35$d3cTv () Int)
(declare-fun Data.Either.Combinators.rightToMaybe () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.gettheTelegram () Int)
(declare-fun lq_tmp$36$x$35$$35$4987 () Int)
(declare-fun Web.Telegram.API.Bot.Data.ShippingQuery () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun GHC.Int.I64$35$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5135 () Int)
(declare-fun lq_tmp$36$x$35$$35$4446 () Int)
(declare-fun ds_d3cOP () Int)
(declare-fun lq_tmp$36$x$35$$35$3515 () Int)
(declare-fun lq_tmp$36$x$35$$35$3652 () Int)
(declare-fun Data.Functor.void () Int)
(declare-fun lit$36$$47$help () Str)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun tail () Int)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun Data.Text.Internal.Lazy.Chunk () Int)
(declare-fun Data.ByteString.Lazy.Internal.Chunk () Int)
(declare-fun Servant.Client.Core.ClientError.FailureResponse () Int)
(declare-fun Data.Aeson.Types.ToJSON.C$58$ToJSON () Int)
(declare-fun lq_tmp$36$x$35$$35$3529 () Int)
(declare-fun lq_tmp$36$x$35$$35$3842 () Int)
(declare-fun isJust () Int)
(declare-fun ds_d3cOW () Int)
(declare-fun InterfaceAdapters.Utils.Helper.MissingEnvError () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lit$36$InterfaceAdapters.Telegram.Telegram () Str)
(declare-fun m$35$$35$a3cBW () Int)
(declare-fun Servant.Client.Core.ClientError.ConnectionError () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lit$36$$63$ () Str)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun ds_d3cM8 () Int)
(declare-fun ds_d3cL1 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun Data.Text.Internal.Lazy.$36$WChunk () Int)
(declare-fun lq_tmp$36$x$35$$35$3065 () Int)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun GHC.Base.$60$$62$ () Int)
(declare-fun Data.Aeson.Key.Key () Int)
(declare-fun lq_tmp$36$x$35$$35$3770 () Int)
(declare-fun GHC.Word.W8$35$ () Int)
(declare-fun Data.Text.toLower () Int)
(declare-fun lq_tmp$36$x$35$$35$4294 () Int)
(declare-fun lit$36$$47$prefs () Str)
(declare-fun lq_tmp$36$x$35$$35$5314 () Int)
(declare-fun ds_d3cM3 () Int)
(declare-fun lq_tmp$36$x$35$$35$3109 () Int)
(declare-fun Web.Telegram.API.Bot.Data.Message () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun Data.Maybe.fromMaybe () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun Web.Telegram.API.Bot.Data.user_id () Int)
(declare-fun lq_tmp$36$x$35$$35$5248 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun Web.Telegram.API.Bot.API.Core.runTelegramClient () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558051$35$$35$d3cRR () Bool)
(declare-fun uuid$35$$35$a3cC1 () Int)
(declare-fun lq_tmp$36$x$35$$35$4857 () Int)
(declare-fun ds_d3cM6 () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun GHC.Show.show () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WBool () Int)
(declare-fun GHC.List.last () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram._callTelegramClient () Int)
(declare-fun Data.Aeson.Types.Internal.Object () Int)
(declare-fun GHC.Show.$36$fShow$91$$93$ () Int)
(declare-fun Data.ByteString.Lazy.fromStrict () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558055$35$$35$d3cRV () Bool)
(declare-fun GHC.List.zipWith () Int)
(declare-fun papp5 () Int)
(declare-fun lit$36$Hi$33$$32$I$32$am$32$$64$MaximumCityBot$32$$10$Enter$32$a$32$place$32$name$32$For$32$ex$58$$32$$10$Mumbai$44$$32$$10$Pune$32$$10$Maharashtra$32$$10$Bhivandi$10$$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$5355 () Int)
(declare-fun snd () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WNumber () Int)
(declare-fun lq_tmp$36$x$35$$35$3930 () Int)
(declare-fun GHC.Generics.C$58$Generic () Int)
(declare-fun lit$36$Fail$58$getTelegramSettings$32$$124$$32$Telegram$32$Token$32$error () Str)
(declare-fun ds_d3cPl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558121$35$$35$d3cSZ () Int)
(declare-fun GHC.Base.pure () Int)
(declare-fun lq_tmp$36$x$35$$35$4894 () Int)
(declare-fun GHC.Base.$62$$62$$61$ () Int)
(declare-fun Data.Aeson.eitherDecode () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.getTelegramSettings () Int)
(declare-fun Web.Telegram.API.Bot.Responses.Response () Int)
(declare-fun fix$36$$36$dShow_a3cGn () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun stringlen () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558030$35$$35$d3cRw () Int)
(declare-fun ds_d3cKZ () Int)
(declare-fun ds_d3cPi () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.getTelegram () Int)
(declare-fun lq_tmp$36$x$35$$35$5100 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$5144 () Int)
(declare-fun lq_tmp$36$x$35$$35$4451 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558015$35$$35$d3cRh () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun Network.HTTP.Client.Manager.newManager () Int)
(declare-fun Web.Telegram.API.Bot.Data.text () Int)
(declare-fun fromJust () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558076$35$$35$d3cSg () Bool)
(declare-fun u$35$$35$a3cBP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558068$35$$35$d3cS8 () Bool)
(declare-fun InterfaceAdapters.Telegram.Telegram.runTC () Int)
(declare-fun Data.Aeson.Types.Internal.Array () Int)
(declare-fun ds_d3cOU () Int)
(declare-fun lq_tmp$36$x$35$$35$5082 () Int)
(declare-fun lit$36$getKey () Str)
(declare-fun lq_anf$36$$35$$35$7205759403793558022$35$$35$d3cRo () Int)
(declare-fun Data.Tuple.uncurry () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558072$35$$35$d3cSc () Bool)
(declare-fun lq_tmp$36$x$35$$35$4907 () Int)
(declare-fun lq_tmp$36$x$35$$35$2967 () Int)
(declare-fun m$35$$35$a3cBU () Int)
(declare-fun lq_tmp$36$x$35$$35$4699 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun ds_d3cL3 () Int)
(declare-fun Web.Telegram.API.Bot.Requests.ChatId () Int)
(declare-fun lq_tmp$36$x$35$$35$2769 () Int)
(declare-fun lq_tmp$36$x$35$$35$4709 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558140$35$$35$d3cTi () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558031$35$$35$d3cRx () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558014$35$$35$d3cRg () Int)
(declare-fun parseResponse$35$$35$a3cBZ () Int)
(declare-fun lq_tmp$36$x$35$$35$4900 () Int)
(declare-fun lq_tmp$36$x$35$$35$2896 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558029$35$$35$d3cRv () Int)
(declare-fun Web.Telegram.API.Bot.API.Messages.sendMessageM () Int)
(declare-fun lq_tmp$36$x$35$$35$2168 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558090$35$$35$d3cSu () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun Control.Monad.Trans.Reader.$36$fFunctorReaderT () Int)
(declare-fun Data.Text.Internal.Text () Int)
(declare-fun ds_d3cL4 () Int)
(declare-fun ds_d3cOO () Int)
(declare-fun lq_tmp$36$x$35$$35$2285 () Int)
(declare-fun lit$36$Unhandled$32$message$58$$32$ () Str)
(declare-fun lit$36$help () Str)
(declare-fun Data.ByteString.Internal.PS () Int)
(declare-fun lq_tmp$36$x$35$$35$2875 () Int)
(declare-fun Web.Telegram.API.Bot.API.Core.Token () Int)
(declare-fun whatUserTyped$35$$35$a3cC0 () Int)
(declare-fun ds_d3cM0 () Int)
(declare-fun ds_d3cQl () Int)
(declare-fun addrLen () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun InterfaceAdapters.Utils.Helper.$36$fShowEnvError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558145$35$$35$d3cTn () Int)
(declare-fun whatUserTyped$35$$35$a3cBY () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558141$35$$35$d3cTj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558037$35$$35$d3cRD () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lit$36$$10$Place$32$Name$32$seems$32$odd$10$ () Str)
(declare-fun lq_tmp$36$x$35$$35$5014 () Int)
(declare-fun Web.Telegram.API.Bot.Requests.SetWebhookRequest () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558032$35$$35$d3cRy () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun helper$35$$35$a3cBT () Int)
(declare-fun Data.Text.dropWhileEnd () Int)
(declare-fun Data.Aeson.Types.Internal.Bool () Int)
(declare-fun Data.Text.Encoding.encodeUtf8 () Int)
(declare-fun ds_d3cOy () Int)
(declare-fun Data.Text.pack () Int)
(declare-fun ds_d3cPn () Int)
(declare-fun lq_tmp$36$x$35$$35$3808 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4214 () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5305 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun Web.Telegram.API.Bot.Requests.SetWebhookWithoutCertRequest () Int)
(declare-fun lq_tmp$36$x$35$$35$5178 () Int)
(declare-fun Data.Text.drop () Int)
(declare-fun GHC.Show.$36$fShowInt () Int)
(declare-fun Web.Telegram.API.Bot.Data.LanguageCode () Int)
(declare-fun Data.Aeson.Types.Internal.String () Int)
(declare-fun lq_tmp$36$x$35$$35$3937 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun ds_d3cKX () Int)
(declare-fun ds_d3cPk () Int)
(declare-fun GHC.List.init () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558012$35$$35$d3cRe () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.List.break () Int)
(declare-fun lq_tmp$36$x$35$$35$4569 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558036$35$$35$d3cRC () Int)
(declare-fun Data.Maybe.maybe () Int)
(declare-fun ds_d3cKW () Int)
(declare-fun m$35$$35$a3cBN () Int)
(declare-fun Web.Telegram.API.Bot.Data.$36$fShowUpdate () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun Servant.Client.Core.ClientError.UnsupportedContentType () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$4126 () Int)
(declare-fun lq_tmp$36$x$35$$35$3417 () Int)
(declare-fun lq_tmp$36$x$35$$35$3615 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun Data.Aeson.Types.FromJSON.C$58$FromJSON () Int)
(declare-fun ds_d3cOS () Int)
(declare-fun lq_tmp$36$x$35$$35$4937 () Int)
(declare-fun Foreign.C.Types.CChar () Int)
(declare-fun ds_d3cMa () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun ds_d3cLH () Int)
(declare-fun msg$35$$35$a3cBH () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793557995$35$$35$d3cQX () Int)
(declare-fun Web.Telegram.API.Bot.Data.CallbackQuery () Int)
(declare-fun lq_tmp$36$x$35$$35$5382 () Int)
(declare-fun lq_tmp$36$x$35$$35$4190 () Int)
(declare-fun lq_tmp$36$x$35$$35$3609 () Int)
(declare-fun cast_as () Int)
(declare-fun GHC.Ptr.Ptr () Int)
(declare-fun Data.Text.Internal.$36$WText () Int)
(declare-fun ds_d3cOV () Int)
(declare-fun lq_tmp$36$x$35$$35$2868 () Int)
(declare-fun lq_tmp$36$x$35$$35$5274 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558087$35$$35$d3cSr () Int)
(declare-fun Data.ByteString.Lazy.Internal.$36$WChunk () Int)
(declare-fun lq_tmp$36$x$35$$35$3153 () Int)
(declare-fun GHC.Base.$36$fApplicativeIO () Int)
(declare-fun cast_as_int () Int)
(declare-fun fix$36$$36$dMonadIO_a3cED () Int)
(declare-fun manager$35$$35$a3cBK () Int)
(declare-fun lq_tmp$36$x$35$$35$4946 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun ds_d3cLv () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.getUserId () Int)
(declare-fun Servant.Client.Internal.HttpClient.$36$fMonadIOClientM () Int)
(declare-fun lq_tmp$36$x$35$$35$2580 () Int)
(declare-fun lq_tmp$36$x$35$$35$2555 () Int)
(declare-fun ds_d3cQc () Int)
(declare-fun GHC.Base.$36$fMonadIO () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WObject () Int)
(declare-fun lq_tmp$36$x$35$$35$3949 () Int)
(declare-fun Web.Telegram.API.Bot.Data.ChosenInlineResult () Int)
(declare-fun lq_tmp$36$x$35$$35$5367 () Int)
(declare-fun len () Int)
(declare-fun GHC.Classes.$36$fEqChar () Int)
(declare-fun ds_d3cM2 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4439 () Int)
(declare-fun lq_tmp$36$x$35$$35$3944 () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$3771 () Int)
(declare-fun lq_tmp$36$x$35$$35$2321 () Int)
(declare-fun Network.HTTP.Client.TLS.tlsManagerSettings () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun Control.Monad.Trans.Reader.$36$fMonadIOReaderT () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram._handleUpdate () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558152$35$$35$d3cTu () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun allin$35$$35$a3cBM () Int)
(declare-fun lq_tmp$36$x$35$$35$4221 () Int)
(declare-fun ds_d3cPp () Int)
(declare-fun lq_tmp$36$x$35$$35$3732 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun lq_tmp$36$x$35$$35$4999 () Int)
(declare-fun ds_d3cM5 () Int)
(declare-fun tk$35$$35$a3cBG () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun ds_d3cPm () Int)
(declare-fun lit$36$Left$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$5261 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun lit$36$$47$ () Str)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lq_tmp$36$x$35$$35$4408 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun fldList () Int)
(declare-fun Web.Telegram.API.Bot.Data.PreCheckoutQuery () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lit$36$so$32$no$32$response () Str)
(declare-fun Data.ByteString.Lazy.Internal.Empty () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$3769 () Int)
(declare-fun lq_tmp$36$x$35$$35$4645 () Int)
(declare-fun ds_d3cOQ () Int)
(declare-fun lq_tmp$36$x$35$$35$4160 () Int)
(declare-fun Data.Text.Internal.Lazy.Empty () Int)
(declare-fun lq_tmp$36$x$35$$35$3329 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558129$35$$35$d3cT7 () Int)
(declare-fun lq_tmp$36$x$35$$35$2955 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558120$35$$35$d3cSY () Int)
(declare-fun lit$36$TELEGRAM_TOKEN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403793557992$35$$35$d3cQU () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_tmp$36$x$35$$35$3757 () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WArray () Int)
(declare-fun Data.Aeson.Types.Internal.Null () Int)
(declare-fun lq_tmp$36$x$35$$35$5377 () Int)
(declare-fun Web.Telegram.API.Bot.Data.Update () Int)
(declare-fun lit$36$usertyped$32$missing () Str)
(declare-fun ds_d3cOT () Int)
(declare-fun lq_tmp$36$x$35$$35$5281 () Int)
(declare-fun tc$35$$35$a3cBL () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558118$35$$35$d3cSW () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558016$35$$35$d3cRi () Int)
(declare-fun lq_tmp$36$x$35$$35$4763 () Int)
(declare-fun fix$36$$36$dIP_a3cFL () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun Data.Text.isInfixOf () Int)
(declare-fun uuid$35$$35$a3cBX () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun ds_d3cM9 () Int)
(declare-fun ds_d3cL0 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun fst () Int)
(declare-fun InterfaceAdapters.Utils.Helper.EmptyKeyError () Int)
(declare-fun lit$36$usertyped$32$bad () Str)
(declare-fun lq_tmp$36$x$35$$35$3741 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun fix$36$$36$dShow_a3cEL () Int)
(declare-fun lq_tmp$36$x$35$$35$4432 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_tmp$36$x$35$$35$4959 () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.getTelegramUser () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_tmp$36$x$35$$35$4858 () Int)
(declare-fun lq_tmp$36$x$35$$35$2284 () Int)
(declare-fun lq_tmp$36$x$35$$35$2017 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_tmp$36$x$35$$35$3667 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_tmp$36$x$35$$35$4228 () Int)
(declare-fun Data.Text.$36$fIsStringText () Int)
(declare-fun lq_tmp$36$x$35$$35$3197 () Int)
(declare-fun autolen () Int)
(declare-fun Servant.Client.Core.ClientError.DecodeFailure () Int)
(declare-fun lq_tmp$36$x$35$$35$4990 () Int)
(declare-fun ds_d3cL5 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun ds_d3cON () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun GHC.List.take () Int)
(declare-fun lq_tmp$36$x$35$$35$4092 () Int)
(declare-fun Servant.Client.Internal.HttpClient.$36$fFunctorClientM () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558091$35$$35$d3cSv () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Base.return () Int)
(declare-fun lq_tmp$36$x$35$$35$2360 () Int)
(declare-fun lq_tmp$36$x$35$$35$5211 () Int)
(declare-fun ds_d3cPr () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793557990$35$$35$d3cQS () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WString () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun ds_d3cM7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558126$35$$35$d3cT4 () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$3876 () Int)
(declare-fun lq_tmp$36$x$35$$35$3494 () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun lit$36$$45$ () Str)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.parseGetResponse () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558146$35$$35$d3cTo () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun tape$35$$35$a3cBQ () Int)
(declare-fun lq_tmp$36$x$35$$35$2770 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun manager$35$$35$a3cBE () Int)
(declare-fun ds_d3cPo () Int)
(declare-fun lq_tmp$36$x$35$$35$4584 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lit$36$$42$ () Str)
(declare-fun Data.Text.Encoding.Error.EncodeError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558047$35$$35$d3cRN () Bool)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558043$35$$35$d3cRJ () Bool)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lit$36$Right$32$$32$ () Str)
(declare-fun Data.Text.strip () Int)
(declare-fun Control.Monad.IO.Class.liftIO () Int)
(declare-fun InterfaceAdapters.Utils.Helper.getKey () Int)
(declare-fun ds_d3cOR () Int)
(declare-fun lq_tmp$36$x$35$$35$3715 () Int)
(declare-fun lit$36$MaximumCity$45$0.9.9$45$GJsk72Pe87XAw43lGJhWJP () Str)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793558115$35$$35$d3cST () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun ds_d3cKV () Int)
(declare-fun lit$36$bot () Str)
(declare-fun m$35$$35$a3cBO () Int)
(declare-fun Web.Telegram.API.Bot.Data.User () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun Data.Aeson.Types.Internal.Number () Int)
(declare-fun lq_tmp$36$x$35$$35$4708 () Int)
(declare-fun Data.Text.isPrefixOf () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun lit$36$src$47$InterfaceAdapters$47$Telegram$47$Telegram.hs () Str)
(declare-fun Web.Telegram.API.Bot.Requests.sendMessageRequest () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_tmp$36$x$35$$35$5358 () Int)
(declare-fun lq_tmp$36$x$35$$35$4348 () Int)
(declare-fun Web.Telegram.API.Bot.Requests.SendMessageRequest () Int)
(declare-fun lq_tmp$36$x$35$$35$5327 () Int)
(declare-fun ds_d3cJD () Int)
(declare-fun ds_d3cL2 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram._pushTelegramMsg () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun lq_tmp$36$x$35$$35$3544 () Int)
(declare-fun System.IO.putStrLn () Int)
(declare-fun lq_tmp$36$x$35$$35$4233 () Int)
(declare-fun lq_tmp$36$x$35$$35$5322 () Int)
(declare-fun lq_tmp$36$x$35$$35$4309 () Int)
(declare-fun lq_tmp$36$x$35$$35$3278 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4772 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403793558086$35$$35$d3cSq () Int)
(declare-fun lq_tmp$36$x$35$$35$2554 () Int)
(declare-fun prfsMessage$35$$35$a3cC3 () Int)
(declare-fun ds_d3cQb () Int)
(declare-fun GHC.Show.$36$fShowChar () Int)
(declare-fun lq_tmp$36$x$35$$35$2286 () Int)
(declare-fun lit$36$getMeta$32$unkwown$32$error () Str)
(declare-fun GHC.Show.$36$fShowMaybe () Int)
(declare-fun papp2 () Int)
(declare-fun Data.Text.$36$fSemigroupText () Int)
(declare-fun token$35$$35$a3cBD () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3736 () Int)
(declare-fun lq_tmp$36$x$35$$35$2874 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun Data.String.fromString () Int)
(declare-fun ds_d3cM1 () Int)
(declare-fun lq_tmp$36$x$35$$35$4746 () Int)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lit$36$$47$start () Str)
(declare-fun lq_tmp$36$x$35$$35$3031 () Int)
(declare-fun lq_tmp$36$x$35$$35$2795 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)




(assert (distinct lit$36$$47$start lit$36$getMeta$32$unkwown$32$error lit$36$src$47$InterfaceAdapters$47$Telegram$47$Telegram.hs lit$36$bot lit$36$MaximumCity$45$0.9.9$45$GJsk72Pe87XAw43lGJhWJP lit$36$Right$32$$32$ lit$36$$42$ lit$36$$45$ lit$36$usertyped$32$bad lit$36$usertyped$32$missing lit$36$TELEGRAM_TOKEN lit$36$so$32$no$32$response lit$36$$47$ lit$36$Left$32$ lit$36$$10$Place$32$Name$32$seems$32$odd$10$ lit$36$help lit$36$Unhandled$32$message$58$$32$ lit$36$getKey lit$36$Fail$58$getTelegramSettings$32$$124$$32$Telegram$32$Token$32$error lit$36$Hi$33$$32$I$32$am$32$$64$MaximumCityBot$32$$10$Enter$32$a$32$place$32$name$32$For$32$ex$58$$32$$10$Mumbai$44$$32$$10$Pune$32$$10$Maharashtra$32$$10$Bhivandi$10$$32$ lit$36$$47$prefs lit$36$$63$ lit$36$InterfaceAdapters.Telegram.Telegram lit$36$$47$help lit$36$getMeta$32$no$32$data))



(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))




(assert (distinct GHC.Types.False GHC.Types.True))






(assert (= (strLen lit$36$getMeta$32$no$32$data) 15))
(assert (= (strLen lit$36$$47$help) 5))
(assert (= (strLen lit$36$InterfaceAdapters.Telegram.Telegram) 35))
(assert (= (strLen lit$36$$63$) 1))
(assert (= (strLen lit$36$$47$prefs) 6))
(assert (= (strLen lit$36$Hi$33$$32$I$32$am$32$$64$MaximumCityBot$32$$10$Enter$32$a$32$place$32$name$32$For$32$ex$58$$32$$10$Mumbai$44$$32$$10$Pune$32$$10$Maharashtra$32$$10$Bhivandi$10$$32$) 92))
(assert (= (strLen lit$36$Fail$58$getTelegramSettings$32$$124$$32$Telegram$32$Token$32$error) 47))
(assert (= (strLen lit$36$getKey) 6))
(assert (= (strLen lit$36$Unhandled$32$message$58$$32$) 19))
(assert (= (strLen lit$36$help) 4))
(assert (= (strLen lit$36$$10$Place$32$Name$32$seems$32$odd$10$) 22))
(assert (= (strLen lit$36$Left$32$) 5))
(assert (= (strLen lit$36$$47$) 1))
(assert (= (strLen lit$36$so$32$no$32$response) 14))
(assert (= (strLen lit$36$TELEGRAM_TOKEN) 14))
(assert (= (strLen lit$36$usertyped$32$missing) 17))
(assert (= (strLen lit$36$usertyped$32$bad) 13))
(assert (= (strLen lit$36$$45$) 1))
(assert (= (strLen lit$36$$42$) 1))
(assert (= (strLen lit$36$Right$32$$32$) 7))
(assert (= (strLen lit$36$MaximumCity$45$0.9.9$45$GJsk72Pe87XAw43lGJhWJP) 40))
(assert (= (strLen lit$36$bot) 3))
(assert (= (strLen lit$36$src$47$InterfaceAdapters$47$Telegram$47$Telegram.hs) 42))
(assert (= (strLen lit$36$getMeta$32$unkwown$32$error) 21))
(assert (= (strLen lit$36$$47$start) 6))
(push 1)
(push 1)
(pop 1)
(pop 1)
(exit)
