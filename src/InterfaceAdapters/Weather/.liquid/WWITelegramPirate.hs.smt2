(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun papp7 () Int)
(declare-fun lq_tmp$36$x$35$$35$5449 () Int)
(declare-fun GHC.Exception.Type.C$58$Exception () Int)
(declare-fun lq_tmp$36$x$35$$35$5098 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147359$35$$35$d1u1N () Int)
(declare-fun lq_tmp$36$x$35$$35$4338 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun totalityError () Int)
(declare-fun lq_tmp$36$x$35$$35$5054 () Int)
(declare-fun lq_tmp$36$x$35$$35$5450 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a1tYg () Int)
(declare-fun fix$36$$36$d$40$$37$$44$$37$$41$_a1tXh () Int)
(declare-fun Data.ByteString.Internal.$36$WPS () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4568 () Int)
(declare-fun GHC.Types.Word32Rep () Int)
(declare-fun lq_tmp$36$x$35$$35$5857 () Int)
(declare-fun lq_tmp$36$x$35$$35$4751 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun InterfaceAdapters.Weather.WWITelegramPirate.runWWITelegramPirate () Int)
(declare-fun lq_tmp$36$x$35$$35$5103 () Int)
(declare-fun lq_tmp$36$x$35$$35$4311 () Int)
(declare-fun Data.Text.Encoding.Error.DecodeError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147364$35$$35$d1u1S () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147340$35$$35$d1u1u () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun GHC.Int.I64$35$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.Types.$36$tcChar () Int)
(declare-fun lq_tmp$36$x$35$$35$6026 () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun InterfaceAdapters.Weather.WWITelegramPirate.InternalError () Int)
(declare-fun tail () Int)
(declare-fun Data.Typeable.Internal.TrTyCon () Int)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun Data.ByteString.Lazy.Internal.Chunk () Int)
(declare-fun Data.Aeson.Types.ToJSON.C$58$ToJSON () Int)
(declare-fun lq_tmp$36$x$35$$35$6092 () Int)
(declare-fun lit$36$EntityNotFound$32$ () Str)
(declare-fun Polysemy.Embed.Type.$36$WEmbed () Int)
(declare-fun isJust () Int)
(declare-fun GHC.Types.Word8Rep () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_tmp$36$x$35$$35$4675 () Int)
(declare-fun GHC.Conc.Sync.ThreadId () Int)
(declare-fun lq_tmp$36$x$35$$35$4958 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5519 () Int)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun GHC.List.span () Int)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a1tYm () Int)
(declare-fun msg$35$$35$a1tVp () Int)
(declare-fun UseCases.AgricultureUseCase.C$58$UserInput () Int)
(declare-fun InterfaceAdapters.Weather.WWITelegramPirate.$36$fShowWeatherTelegramException () Int)
(declare-fun fix$36$$36$ctoException$35$$35$a1tYC () Int)
(declare-fun Data.Aeson.Key.Key () Int)
(declare-fun UseCases.WWI.$36$WSendBackMsg () Int)
(declare-fun GHC.Word.W8$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4869 () Int)
(declare-fun lq_tmp$36$x$35$$35$4294 () Int)
(declare-fun lq_tmp$36$x$35$$35$81 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun Data.Maybe.fromMaybe () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5517 () Int)
(declare-fun lq_tmp$36$x$35$$35$5311 () Int)
(declare-fun Data.Typeable.Internal.$36$WSomeTypeRep () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WBool () Int)
(declare-fun GHC.List.last () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram._callTelegramClient () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147356$35$$35$d1u1K () Int)
(declare-fun Data.Aeson.Types.Internal.Object () Int)
(declare-fun lit$36$Telegram$32$ () Str)
(declare-fun fix$36$$36$krep_a1tZg () Int)
(declare-fun GHC.Show.$36$fShow$91$$93$ () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun papp5 () Int)
(declare-fun fix$36$$36$cp1Exception$35$$35$a1tYw () Int)
(declare-fun GHC.Types.Word16Rep () Int)
(declare-fun snd () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WNumber () Int)
(declare-fun GHC.Generics.C$58$Generic () Int)
(declare-fun lq_tmp$36$x$35$$35$5307 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun GHC.Base.pure () Int)
(declare-fun GHC.Base.$62$$62$$61$ () Int)
(declare-fun InterfaceAdapters.Telegram.Telegram.getTelegramSettings () Int)
(declare-fun lq_tmp$36$x$35$$35$4989 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun GHC.IO.MaskedUninterruptible () Int)
(declare-fun lq_tmp$36$x$35$$35$5100 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun GHC.Types.Word64Rep () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Show.showParen () Int)
(declare-fun fromJust () Int)
(declare-fun lit$36$main () Str)
(declare-fun GHC.Types.UnliftedRep () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147329$35$$35$d1u1j () Int)
(declare-fun lq_tmp$36$x$35$$35$5309 () Int)
(declare-fun InterfaceAdapters.Weather.WWITelegramPirate.EntityNotFound () Int)
(declare-fun Data.Aeson.Types.Internal.Array () Int)
(declare-fun Data.Typeable.Internal.TrType () Int)
(declare-fun GHC.Exception.Type.SomeException () Int)
(declare-fun lq_tmp$36$x$35$$35$4883 () Int)
(declare-fun tk$35$$35$a1tVt () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun GHC.Types.IntRep () Int)
(declare-fun co_a1tXt () Int)
(declare-fun GHC.Types.DoubleRep () Int)
(declare-fun InterfaceAdapters.Weather.WWITelegramPirate.EntityAlreadyExists () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun Polysemy.Internal.Combinators.interpret () Int)
(declare-fun lq_tmp$36$x$35$$35$78 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun Data.Text.Internal.Text () Int)
(declare-fun lq_rnm$36$x$35$$35$a1tXo$35$$35$378 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147320$35$$35$d1u1a () Int)
(declare-fun lq_tmp$36$x$35$$35$4274 () Int)
(declare-fun lq_tmp$36$x$35$$35$6113 () Int)
(declare-fun Data.ByteString.Internal.PS () Int)
(declare-fun GHC.Types.Int8Rep () Int)
(declare-fun lq_tmp$36$x$35$$35$4260 () Int)
(declare-fun lq_tmp$36$x$35$$35$82 () Int)
(declare-fun Web.Telegram.API.Bot.API.Core.Token () Int)
(declare-fun lq_tmp$36$x$35$$35$4851 () Int)
(declare-fun Data.Maybe.isNothing () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun addrLen () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun Data.Typeable.Internal.$36$WTrTyCon () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun req$35$$35$a1tVo () Int)
(declare-fun UseCases.WWI.UserAsk () Int)
(declare-fun GHC.Types.WordRep () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun Data.Typeable.Internal.$36$WTrApp () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun Polysemy.Embed.Type.Embed () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun Data.Aeson.Types.Internal.Bool () Int)
(declare-fun Data.Typeable.Internal.SomeTypeRep () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5305 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun co_a1tXE () Int)
(declare-fun Data.Aeson.Types.Internal.String () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lit$36$$39$InternalError () Str)
(declare-fun lq_tmp$36$x$35$$35$5102 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Base.$62$$62$ () Int)
(declare-fun Data.Maybe.maybe () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun Data.Aeson.Types.FromJSON.C$58$FromJSON () Int)
(declare-fun lq_tmp$36$x$35$$35$5084 () Int)
(declare-fun lq_tmp$36$x$35$$35$5433 () Int)
(declare-fun GHC.IO.MaskedInterruptible () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun Data.Maybe.fromJust () Int)
(declare-fun cast_as () Int)
(declare-fun Data.Text.Internal.$36$WText () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun GHC.List.head () Int)
(declare-fun Data.ByteString.Lazy.Internal.$36$WChunk () Int)
(declare-fun GHC.Base.$36$fApplicativeIO () Int)
(declare-fun cast_as_int () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun res$35$$35$a1tVr () Int)
(declare-fun GHC.Base.$36$fMonadIO () Int)
(declare-fun InterfaceAdapters.Weather.WWITelegramPirate.sendBackTelegram () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WObject () Int)
(declare-fun len () Int)
(declare-fun lq_tmp$36$x$35$$35$4636 () Int)
(declare-fun x$35$$35$a1tXo () Int)
(declare-fun Data.Typeable.Internal.$36$WTrType () Int)
(declare-fun UseCases.WWI.SendBackMsg () Int)
(declare-fun GHC.Types.Int64Rep () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp1 () Int)
(declare-fun GHC.Classes.$36$p2$40$$37$$44$$37$$41$ () Int)
(declare-fun GHC.Exception.Type.$36$dmdisplayException () Int)
(declare-fun lit$36$$39$EntityNotFound () Str)
(declare-fun GHC.Exception.Type.$36$dmtoException () Int)
(declare-fun lq_tmp$36$x$35$$35$80 () Int)
(declare-fun Data.Typeable.Internal.TrFun () Int)
(declare-fun GHC.Exception.throw () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun GHC.Types.AddrRep () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_tmp$36$x$35$$35$5099 () Int)
(declare-fun lq_tmp$36$x$35$$35$5312 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_tmp$36$x$35$$35$5451 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun Polysemy.Internal.embed () Int)
(declare-fun lq_tmp$36$x$35$$35$5306 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lq_tmp$36$x$35$$35$4682 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun fldList () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147353$35$$35$d1u1H () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.IO.Unmasked () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147357$35$$35$d1u1L () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun Data.ByteString.Lazy.Internal.Empty () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$5431 () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun GHC.Types.FloatRep () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WArray () Int)
(declare-fun Data.Aeson.Types.Internal.Null () Int)
(declare-fun Web.Telegram.API.Bot.Data.Update () Int)
(declare-fun lit$36$WeatherTelegramException () Str)
(declare-fun Data.Maybe.isJust () Int)
(declare-fun fix$36$$36$cdisplayException$35$$35$a1tYO () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun GHC.Types.LiftedRep () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lit$36$$39$EntityAlreadyExists () Str)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_tmp$36$x$35$$35$5308 () Int)
(declare-fun lq_tmp$36$x$35$$35$4318 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun GHC.Types.MkCoercible () Int)
(declare-fun GHC.Types.VecRep () Int)
(declare-fun fst () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lit$36$InternalError$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$4674 () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun lq_tmp$36$x$35$$35$4630 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_tmp$36$x$35$$35$5518 () Int)
(declare-fun UseCases.WWI.GetWeatherTown () Int)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun autolen () Int)
(declare-fun lq_tmp$36$x$35$$35$4990 () Int)
(declare-fun lq_tmp$36$x$35$$35$79 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147360$35$$35$d1u1O () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Types.Int16Rep () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun GHC.Types.eq_sel () Int)
(declare-fun lq_tmp$36$x$35$$35$5310 () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WString () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_tmp$36$x$35$$35$5078 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.Eq$35$ () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun GHC.Types.SumRep () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_tmp$36$x$35$$35$4584 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun Data.Text.Encoding.Error.EncodeError () Int)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147345$35$$35$d1u1z () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun fix$36$$36$cfromException$35$$35$a1tYI () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147322$35$$35$d1u1c () Int)
(declare-fun lq_tmp$36$x$35$$35$4414 () Int)
(declare-fun lq_tmp$36$x$35$$35$5101 () Int)
(declare-fun lq_tmp$36$x$35$$35$5085 () Int)
(declare-fun lq_tmp$36$x$35$$35$4400 () Int)
(declare-fun lq_tmp$36$x$35$$35$5432 () Int)
(declare-fun UseCases.WWI.$36$WGetWeatherTown () Int)
(declare-fun GHC.Classes.C$58$$40$$37$$44$$37$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147335$35$$35$d1u1p () Int)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun Data.Aeson.Types.Internal.Number () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun GHC.Types.TupleRep () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147366$35$$35$d1u1U () Int)
(declare-fun InterfaceAdapters.Weather.WWITelegramPirate.$36$fExceptionWeatherTelegramException () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1tXO () Int)
(declare-fun lit$36$InterfaceAdapters.Weather.WWITelegramPirate () Str)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Types.$36$tc$91$$93$ () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147358$35$$35$d1u1M () Int)
(declare-fun Data.Typeable.Internal.mkTrCon () Int)
(declare-fun lq_tmp$36$x$35$$35$4673 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.Show.$36$fShowChar () Int)
(declare-fun Data.Typeable.Internal.C$58$Typeable () Int)
(declare-fun GHC.Exception.Type.$36$dmfromException () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147367$35$$35$d1u1V () Int)
(declare-fun papp2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147348$35$$35$d1u1C () Int)
(declare-fun lit$36$EntityAlreadyExists$32$ () Str)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4951 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793147363$35$$35$d1u1R () Int)
(declare-fun lq_tmp$36$x$35$$35$83 () Int)
(declare-fun Polysemy.Internal.Union.C$58$Find () Int)
(declare-fun lq_tmp$36$x$35$$35$4850 () Int)
(declare-fun InterfaceAdapters.Weather.Weather.getAgInfo () Int)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Types.Int32Rep () Int)
(declare-fun Data.Typeable.Internal.TrApp () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)


(assert (distinct lit$36$EntityAlreadyExists$32$ lit$36$InterfaceAdapters.Weather.WWITelegramPirate lit$36$InternalError$32$ lit$36$$39$EntityAlreadyExists lit$36$WeatherTelegramException lit$36$$39$EntityNotFound lit$36$$39$InternalError lit$36$main lit$36$Telegram$32$ lit$36$EntityNotFound$32$))
(assert (distinct GHC.Types.Int32Rep GHC.Types.Int16Rep GHC.Types.LiftedRep GHC.Types.FloatRep GHC.Types.AddrRep GHC.Types.Int64Rep GHC.Types.WordRep GHC.Types.Int8Rep GHC.Types.DoubleRep GHC.Types.IntRep GHC.Types.UnliftedRep GHC.Types.Word64Rep GHC.Types.Word16Rep GHC.Types.Word8Rep GHC.Types.Word32Rep))

(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))



(assert (distinct GHC.Types.False GHC.Types.True))
(assert (distinct GHC.IO.Unmasked GHC.IO.MaskedInterruptible GHC.IO.MaskedUninterruptible))

(assert (= (strLen lit$36$EntityNotFound$32$) 15))
(assert (= (strLen lit$36$Telegram$32$) 9))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$$39$InternalError) 14))
(assert (= (strLen lit$36$$39$EntityNotFound) 15))
(assert (= (strLen lit$36$WeatherTelegramException) 24))
(assert (= (strLen lit$36$$39$EntityAlreadyExists) 20))
(assert (= (strLen lit$36$InternalError$32$) 14))
(assert (= (strLen lit$36$InterfaceAdapters.Weather.WWITelegramPirate) 43))
(assert (= (strLen lit$36$EntityAlreadyExists$32$) 20))
(push 1)
(push 1)
(pop 1)
(pop 1)
(exit)
