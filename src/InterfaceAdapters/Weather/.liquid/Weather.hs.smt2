(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun papp7 () Int)
(declare-fun lq_tmp$36$x$35$$35$4462 () Int)
(declare-fun lq_tmp$36$x$35$$35$3780 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008559$35$$35$d5647 () Int)
(declare-fun Data.ByteString.Internal.$36$WPS () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun InterfaceAdapters.Weather.Weather.getWeather () Int)
(declare-fun lq_tmp$36$x$35$$35$6200 () Int)
(declare-fun lq_tmp$36$x$35$$35$5705 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008674$35$$35$d565Y () Int)
(declare-fun lq_tmp$36$x$35$$35$5912 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008577$35$$35$d564p () Int)
(declare-fun lq_tmp$36$x$35$$35$4210 () Int)
(declare-fun lq_tmp$36$x$35$$35$4586 () Int)
(declare-fun lq_tmp$36$x$35$$35$4157 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008653$35$$35$d565D () Int)
(declare-fun InterfaceAdapters.Preferences.Monsoon () Int)
(declare-fun lq_tmp$36$x$35$$35$5906 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008583$35$$35$d564v () Int)
(declare-fun lq_tmp$36$x$35$$35$6062 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008624$35$$35$d565a () Int)
(declare-fun GHC.Int.I64$35$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun Data.ByteString.UTF8.toString () Int)
(declare-fun lq_tmp$36$x$35$$35$5384 () Int)
(declare-fun InterfaceAdapters.Preferences.Standard () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun tail () Int)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun Data.ByteString.Lazy.Internal.Chunk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008545$35$$35$d563T () Int)
(declare-fun ds_d563h () Int)
(declare-fun Data.Aeson.Types.ToJSON.C$58$ToJSON () Int)
(declare-fun lq_tmp$36$x$35$$35$4119 () Int)
(declare-fun lq_tmp$36$x$35$$35$5585 () Int)
(declare-fun lq_tmp$36$x$35$$35$6461 () Int)
(declare-fun InterfaceAdapters.Weather.PirateWeatherAPI.weatherCurrentForecast () Int)
(declare-fun lq_tmp$36$x$35$$35$6413 () Int)
(declare-fun InterfaceAdapters.Preferences.RightNow () Int)
(declare-fun lq_tmp$36$x$35$$35$4172 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008625$35$$35$d565b () Int)
(declare-fun lq_tmp$36$x$35$$35$4235 () Int)
(declare-fun lq_tmp$36$x$35$$35$5519 () Int)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun lit$36$Are$32$your$32$preferences$32$set$32$right$63$$32$Use$32$$47$prefs$32$$60$Weather$32$or$32$WaterLevels$32$or$32$WeatherWaterLevels$32$or$32$Monsoon$32$or$32$All$62$$32$$60$Mini$32$or$32$Standard$32$or$32$Detailed$62$$32$$60$RightNow$32$or$32$Alerts$32$or$32$NearForecast$32$or$32$LongRange$62$$32$For$32$ex$58$$32$$47$prefs$32$weather$32$mini$32$rightnow$32$ () Str)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun lit$36$$32$$37$$32$livelake$32$level$32$at$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$5699 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008678$35$$35$d5662 () Int)
(declare-fun lq_tmp$36$x$35$$35$3635 () Int)
(declare-fun lq_tmp$36$x$35$$35$5413 () Int)
(declare-fun lq_tmp$36$x$35$$35$3585 () Int)
(declare-fun lit$36$$47$prefs () Str)
(declare-fun w$35$$35$a55XL () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008579$35$$35$d564r () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008599$35$$35$d564L () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008591$35$$35$d564D () Int)
(declare-fun lit$36$$32$No$32$Water$32$Data$32$can$32$be$32$found$32$for$32$place$32$provided$32$ () Str)
(declare-fun ds_d562w () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$6005 () Int)
(declare-fun lq_tmp$36$x$35$$35$4025 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lit$36$$47$Preferences$32$related$32$$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$5568 () Int)
(declare-fun lq_tmp$36$x$35$$35$4301 () Int)
(declare-fun lq_tmp$36$x$35$$35$3432 () Int)
(declare-fun lq_tmp$36$x$35$$35$6527 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008612$35$$35$d564Y () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WBool () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008669$35$$35$d565T () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008661$35$$35$d565L () Int)
(declare-fun Data.Aeson.Types.Internal.Object () Int)
(declare-fun lq_tmp$36$x$35$$35$5993 () Int)
(declare-fun papp5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008647$35$$35$d565x () Int)
(declare-fun lq_tmp$36$x$35$$35$6189 () Int)
(declare-fun lq_tmp$36$x$35$$35$5792 () Int)
(declare-fun ds_d563D () Int)
(declare-fun lq_tmp$36$x$35$$35$6034 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WNumber () Int)
(declare-fun GHC.Generics.C$58$Generic () Int)
(declare-fun GHC.Base.pure () Int)
(declare-fun lq_tmp$36$x$35$$35$5378 () Int)
(declare-fun GHC.Base.$62$$62$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5620 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008578$35$$35$d564q () Int)
(declare-fun lq_tmp$36$x$35$$35$4989 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008627$35$$35$d565d () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008611$35$$35$d564X () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$3520 () Int)
(declare-fun lq_tmp$36$x$35$$35$4451 () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_tmp$36$x$35$$35$6749 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008657$35$$35$d565H () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008677$35$$35$d5661 () Int)
(declare-fun ds_d563j () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008637$35$$35$d565n () Int)
(declare-fun lq_tmp$36$x$35$$35$7055 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008603$35$$35$d564P () Int)
(declare-fun InterfaceAdapters.Preferences.WaterLevels () Int)
(declare-fun Data.Aeson.Types.Internal.Array () Int)
(declare-fun lq_tmp$36$x$35$$35$6911 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008670$35$$35$d565U () Int)
(declare-fun lq_tmp$36$x$35$$35$3779 () Int)
(declare-fun lq_tmp$36$x$35$$35$5492 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008585$35$$35$d564x () Int)
(declare-fun lq_tmp$36$x$35$$35$6554 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008684$35$$35$d5668 () Int)
(declare-fun lq_tmp$36$x$35$$35$6804 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008681$35$$35$d5665 () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008649$35$$35$d565z () Int)
(declare-fun lq_tmp$36$x$35$$35$5202 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008598$35$$35$d564K () Int)
(declare-fun Data.Text.Internal.Text () Int)
(declare-fun InterfaceAdapters.Weather.Weather._getTownNameWeatherFromTown () Int)
(declare-fun pl$35$$35$a55XN () Int)
(declare-fun lq_tmp$36$x$35$$35$6254 () Int)
(declare-fun lq_tmp$36$x$35$$35$3886 () Int)
(declare-fun lq_tmp$36$x$35$$35$4375 () Int)
(declare-fun lq_tmp$36$x$35$$35$7103 () Int)
(declare-fun lq_tmp$36$x$35$$35$6113 () Int)
(declare-fun Data.Text.$36$fEqText () Int)
(declare-fun Data.ByteString.Internal.PS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008648$35$$35$d565y () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008644$35$$35$d565u () Int)
(declare-fun lq_tmp$36$x$35$$35$4747 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun Data.Text.Show.unpack () Int)
(declare-fun lq_tmp$36$x$35$$35$4095 () Int)
(declare-fun InterfaceAdapters.Preferences.WeatherWaterLevels () Int)
(declare-fun UseCases.WWI.UserAsk () Int)
(declare-fun papp3 () Int)
(declare-fun lq_tmp$36$x$35$$35$4343 () Int)
(declare-fun lq_tmp$36$x$35$$35$5498 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008597$35$$35$d564J () Int)
(declare-fun Data.Aeson.Types.Internal.Bool () Int)
(declare-fun Data.Text.pack () Int)
(declare-fun lq_tmp$36$x$35$$35$6269 () Int)
(declare-fun lq_tmp$36$x$35$$35$6533 () Int)
(declare-fun lq_tmp$36$x$35$$35$6476 () Int)
(declare-fun lq_tmp$36$x$35$$35$6959 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008665$35$$35$d565P () Int)
(declare-fun Data.Aeson.Types.Internal.String () Int)
(declare-fun lit$36$Fail$58$getTownNameWeatherFromIp$32$$124$$32$town () Str)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun InterfaceAdapters.Preferences.All () Int)
(declare-fun lq_tmp$36$x$35$$35$4211 () Int)
(declare-fun GHC.Types.True () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3849 () Int)
(declare-fun lq_tmp$36$x$35$$35$4648 () Int)
(declare-fun lq_tmp$36$x$35$$35$5579 () Int)
(declare-fun lq_tmp$36$x$35$$35$5982 () Int)
(declare-fun lit$36$$32$is$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403794008652$35$$35$d565C () Int)
(declare-fun lq_tmp$36$x$35$$35$3938 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008602$35$$35$d564O () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008656$35$$35$d565G () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$4397 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun Data.Aeson.Types.FromJSON.C$58$FromJSON () Int)
(declare-fun lq_tmp$36$x$35$$35$6852 () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008561$35$$35$d5649 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008658$35$$35$d565I () Int)
(declare-fun ds_d563i () Int)
(declare-fun cast_as () Int)
(declare-fun Data.Text.Internal.$36$WText () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008666$35$$35$d565Q () Int)
(declare-fun lq_tmp$36$x$35$$35$5786 () Int)
(declare-fun Data.ByteString.Lazy.Internal.$36$WChunk () Int)
(declare-fun GHC.Base.$36$fApplicativeIO () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_tmp$36$x$35$$35$6212 () Int)
(declare-fun GHC.Base.$36$fMonadIO () Int)
(declare-fun lq_tmp$36$x$35$$35$3815 () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WObject () Int)
(declare-fun lq_tmp$36$x$35$$35$3422 () Int)
(declare-fun lit$36$Hmmm...$32$Something$32$Deeply$32$Wrong () Str)
(declare-fun lq_anf$36$$35$$35$7205759403794008581$35$$35$d564t () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008562$35$$35$d564a () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008680$35$$35$d5664 () Int)
(declare-fun lq_tmp$36$x$35$$35$4060 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008566$35$$35$d564e () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008626$35$$35$d565c () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_tmp$36$x$35$$35$6206 () Int)
(declare-fun lq_tmp$36$x$35$$35$4024 () Int)
(declare-fun lq_tmp$36$x$35$$35$6419 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$6396 () Int)
(declare-fun lq_tmp$36$x$35$$35$4503 () Int)
(declare-fun lq_tmp$36$x$35$$35$6047 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008547$35$$35$d563V () Int)
(declare-fun papp6 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008623$35$$35$d5659 () Int)
(declare-fun lq_tmp$36$x$35$$35$6407 () Int)
(declare-fun lq_tmp$36$x$35$$35$6605 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008563$35$$35$d564b () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008664$35$$35$d565O () Int)
(declare-fun lq_tmp$36$x$35$$35$7007 () Int)
(declare-fun lit$36$$47$Start$32$related$32$$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$5591 () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008660$35$$35$d565K () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008569$35$$35$d564h () Int)
(declare-fun InterfaceAdapters.Preferences.LongRange () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008557$35$$35$d5645 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun ds_d563E () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008582$35$$35$d564u () Int)
(declare-fun Data.ByteString.Lazy.Internal.Empty () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$5372 () Int)
(declare-fun lq_tmp$36$x$35$$35$3923 () Int)
(declare-fun lq_tmp$36$x$35$$35$5633 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008593$35$$35$d564F () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008571$35$$35$d564j () Int)
(declare-fun lq_tmp$36$x$35$$35$6140 () Int)
(declare-fun town$35$$35$a55Xx () Int)
(declare-fun InterfaceAdapters.Preferences.Weather () Int)
(declare-fun lq_tmp$36$x$35$$35$5798 () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008575$35$$35$d564n () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WArray () Int)
(declare-fun Data.Aeson.Types.Internal.Null () Int)
(declare-fun InterfaceAdapters.Weather.Weather._mkWeatherThere () Int)
(declare-fun lq_tmp$36$x$35$$35$6347 () Int)
(declare-fun lit$36$InterfaceAdapters.Weather.Weather () Str)
(declare-fun lq_anf$36$$35$$35$7205759403794008663$35$$35$d565N () Int)
(declare-fun InterfaceAdapters.Weather.Weather._handlePirateResponse () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008564$35$$35$d564c () Int)
(declare-fun lit$36$Fail () Str)
(declare-fun InterfaceAdapters.Utils.HttpHeadersPathDefinitions.extractXForwardedForHeader () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.$36$sel$58$percent_Today$58$PercentLiveStorage () Int)
(declare-fun ds_d563k () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun InterfaceAdapters.Preferences.Mini () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5361 () Int)
(declare-fun lit$36$src$47$InterfaceAdapters$47$Weather$47$Weather.hs$58$$40$55$44$1$41$$45$$40$57$44$130$41$$124$function$32$_helperLivePercent () Str)
(declare-fun lq_tmp$36$x$35$$35$5095 () Int)
(declare-fun InterfaceAdapters.Preferences.Alerts () Int)
(declare-fun lit$36$MaximumCity$45$0.9.9$45$IUoVqdUkwWmEGL6yhjWbHS () Str)
(declare-fun lq_anf$36$$35$$35$7205759403794008560$35$$35$d5648 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008572$35$$35$d564k () Int)
(declare-fun lq_tmp$36$x$35$$35$5933 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008584$35$$35$d564w () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008613$35$$35$d564Z () Int)
(declare-fun lit$36$src$47$InterfaceAdapters$47$Weather$47$Weather.hs$58$$40$74$44$1$41$$45$$40$76$44$88$41$$124$function$32$getWeather () Str)
(declare-fun InterfaceAdapters.Weather.Weather._getTownNameWeatherFromIp () Int)
(declare-fun lq_tmp$36$x$35$$35$5999 () Int)
(declare-fun lq_tmp$36$x$35$$35$5441 () Int)
(declare-fun lq_tmp$36$x$35$$35$5292 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008589$35$$35$d564B () Int)
(declare-fun Data.Text.$36$fIsStringText () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008580$35$$35$d564s () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008662$35$$35$d565M () Int)
(declare-fun InterfaceAdapters.Preferences.Preferences () Int)
(declare-fun lq_tmp$36$x$35$$35$6119 () Int)
(declare-fun papp4 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008635$35$$35$d565l () Int)
(declare-fun lq_tmp$36$x$35$$35$5648 () Int)
(declare-fun GHC.Base.return () Int)
(declare-fun InterfaceAdapters.Weather.OpenWeatherAPI.getWeatherForTown () Int)
(declare-fun lq_tmp$36$x$35$$35$6320 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008631$35$$35$d565h () Int)
(declare-fun lq_tmp$36$x$35$$35$4267 () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WString () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008573$35$$35$d564l () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelLakes.getWaterLakeLevelForPlace_LiveToday_wrtStorage () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008587$35$$35$d564z () Int)
(declare-fun lq_tmp$36$x$35$$35$4529 () Int)
(declare-fun lq_tmp$36$x$35$$35$3526 () Int)
(declare-fun lq_tmp$36$x$35$$35$5142 () Int)
(declare-fun InterfaceAdapters.Water.MH.Core.WaterLevelHeaders.PercentLiveStorage () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008683$35$$35$d5667 () Int)
(declare-fun ds_d563g () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008632$35$$35$d565i () Int)
(declare-fun head () Int)
(declare-fun lq_tmp$36$x$35$$35$4551 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008622$35$$35$d5658 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_tmp$36$x$35$$35$5855 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008636$35$$35$d565m () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008594$35$$35$d564G () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008590$35$$35$d564C () Int)
(declare-fun p$35$$35$a55XM () Int)
(declare-fun lq_tmp$36$x$35$$35$5426 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008646$35$$35$d565w () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008556$35$$35$d5644 () Int)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun lq_tmp$36$x$35$$35$5775 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008614$35$$35$d5650 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008586$35$$35$d564y () Int)
(declare-fun lq_tmp$36$x$35$$35$5827 () Int)
(declare-fun lq_tmp$36$x$35$$35$4059 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008642$35$$35$d565s () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_tmp$36$x$35$$35$6701 () Int)
(declare-fun Data.Aeson.Types.Internal.Number () Int)
(declare-fun lit$36$Fail$58$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403794008659$35$$35$d565J () Int)
(declare-fun Data.Text.isPrefixOf () Int)
(declare-fun lq_tmp$36$x$35$$35$3880 () Int)
(declare-fun lit$36$$32$No$32$Region$32$detectable$32$for$32$determining$32$lake$32$levels$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403794008595$35$$35$d564H () Int)
(declare-fun lq_tmp$36$x$35$$35$4474 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008655$35$$35$d565F () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun weather2$35$$35$a55XI () Int)
(declare-fun lq_tmp$36$x$35$$35$3814 () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun lq_tmp$36$x$35$$35$3591 () Int)
(declare-fun lq_tmp$36$x$35$$35$3850 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008643$35$$35$d565t () Int)
(declare-fun lq_tmp$36$x$35$$35$6448 () Int)
(declare-fun lq_tmp$36$x$35$$35$4468 () Int)
(declare-fun lq_tmp$36$x$35$$35$6653 () Int)
(declare-fun InterfaceAdapters.Preferences.Detailed () Int)
(declare-fun InterfaceAdapters.Weather.Weather._helperLivePercent () Int)
(declare-fun InterfaceAdapters.Weather.PirateWeatherAPI._getWeatherForTown () Int)
(declare-fun GHC.Types.False () Int)
(declare-fun lq_tmp$36$x$35$$35$5726 () Int)
(declare-fun InterfaceAdapters.Preferences.NearForecast () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008673$35$$35$d565X () Int)
(declare-fun papp2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008654$35$$35$d565E () Int)
(declare-fun lq_tmp$36$x$35$$35$6326 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008650$35$$35$d565A () Int)
(declare-fun lq_tmp$36$x$35$$35$3903 () Int)
(declare-fun town$35$$35$a55XJ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403794008630$35$$35$d565g () Int)
(declare-fun lq_tmp$36$x$35$$35$3684 () Int)
(declare-fun InterfaceAdapters.Weather.Weather.getAgInfo () Int)
(declare-fun Data.String.fromString () Int)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lit$36$$47$start () Str)
(declare-fun lq_tmp$36$x$35$$35$6241 () Int)
(declare-fun lq_tmp$36$x$35$$35$5840 () Int)
(declare-fun lq_tmp$36$x$35$$35$4094 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)

(assert (distinct GHC.Types.False GHC.Types.True))

(assert (distinct InterfaceAdapters.Preferences.Weather InterfaceAdapters.Preferences.All InterfaceAdapters.Preferences.WeatherWaterLevels InterfaceAdapters.Preferences.WaterLevels InterfaceAdapters.Preferences.Monsoon))

(assert (distinct lit$36$$47$start lit$36$$32$No$32$Region$32$detectable$32$for$32$determining$32$lake$32$levels$32$ lit$36$Fail$58$ lit$36$src$47$InterfaceAdapters$47$Weather$47$Weather.hs$58$$40$74$44$1$41$$45$$40$76$44$88$41$$124$function$32$getWeather lit$36$MaximumCity$45$0.9.9$45$IUoVqdUkwWmEGL6yhjWbHS lit$36$src$47$InterfaceAdapters$47$Weather$47$Weather.hs$58$$40$55$44$1$41$$45$$40$57$44$130$41$$124$function$32$_helperLivePercent lit$36$Fail lit$36$InterfaceAdapters.Weather.Weather lit$36$$47$Start$32$related$32$$32$ lit$36$Hmmm...$32$Something$32$Deeply$32$Wrong lit$36$$32$is$32$ lit$36$Fail$58$getTownNameWeatherFromIp$32$$124$$32$town lit$36$$47$Preferences$32$related$32$$32$ lit$36$$32$No$32$Water$32$Data$32$can$32$be$32$found$32$for$32$place$32$provided$32$ lit$36$$47$prefs lit$36$$32$$37$$32$livelake$32$level$32$at$32$ lit$36$Are$32$your$32$preferences$32$set$32$right$63$$32$Use$32$$47$prefs$32$$60$Weather$32$or$32$WaterLevels$32$or$32$WeatherWaterLevels$32$or$32$Monsoon$32$or$32$All$62$$32$$60$Mini$32$or$32$Standard$32$or$32$Detailed$62$$32$$60$RightNow$32$or$32$Alerts$32$or$32$NearForecast$32$or$32$LongRange$62$$32$For$32$ex$58$$32$$47$prefs$32$weather$32$mini$32$rightnow$32$))


(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))

(assert (distinct InterfaceAdapters.Preferences.Detailed InterfaceAdapters.Preferences.Mini InterfaceAdapters.Preferences.Standard))

(assert (distinct InterfaceAdapters.Preferences.NearForecast InterfaceAdapters.Preferences.Alerts InterfaceAdapters.Preferences.LongRange InterfaceAdapters.Preferences.RightNow))
(assert (= (strLen lit$36$Are$32$your$32$preferences$32$set$32$right$63$$32$Use$32$$47$prefs$32$$60$Weather$32$or$32$WaterLevels$32$or$32$WeatherWaterLevels$32$or$32$Monsoon$32$or$32$All$62$$32$$60$Mini$32$or$32$Standard$32$or$32$Detailed$62$$32$$60$RightNow$32$or$32$Alerts$32$or$32$NearForecast$32$or$32$LongRange$62$$32$For$32$ex$58$$32$$47$prefs$32$weather$32$mini$32$rightnow$32$) 226))
(assert (= (strLen lit$36$$32$$37$$32$livelake$32$level$32$at$32$) 21))
(assert (= (strLen lit$36$$47$prefs) 6))
(assert (= (strLen lit$36$$32$No$32$Water$32$Data$32$can$32$be$32$found$32$for$32$place$32$provided$32$) 47))
(assert (= (strLen lit$36$$47$Preferences$32$related$32$$32$) 22))
(assert (= (strLen lit$36$Fail$58$getTownNameWeatherFromIp$32$$124$$32$town) 36))
(assert (= (strLen lit$36$$32$is$32$) 4))
(assert (= (strLen lit$36$Hmmm...$32$Something$32$Deeply$32$Wrong) 30))
(assert (= (strLen lit$36$$47$Start$32$related$32$$32$) 16))
(assert (= (strLen lit$36$InterfaceAdapters.Weather.Weather) 33))
(assert (= (strLen lit$36$Fail) 4))
(assert (= (strLen lit$36$src$47$InterfaceAdapters$47$Weather$47$Weather.hs$58$$40$55$44$1$41$$45$$40$57$44$130$41$$124$function$32$_helperLivePercent) 84))
(assert (= (strLen lit$36$MaximumCity$45$0.9.9$45$IUoVqdUkwWmEGL6yhjWbHS) 40))
(assert (= (strLen lit$36$src$47$InterfaceAdapters$47$Weather$47$Weather.hs$58$$40$74$44$1$41$$45$$40$76$44$88$41$$124$function$32$getWeather) 75))
(assert (= (strLen lit$36$Fail$58$) 5))
(assert (= (strLen lit$36$$32$No$32$Region$32$detectable$32$for$32$determining$32$lake$32$levels$32$) 50))
(assert (= (strLen lit$36$$47$start) 6))
(push 1)
(push 1)
(pop 1)
(pop 1)
(exit)
