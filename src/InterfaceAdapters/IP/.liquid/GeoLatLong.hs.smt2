(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun papp7 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun Data.Aeson.Types.Internal.TaggedObject () Int)
(declare-fun totalityError () Int)
(declare-fun Data.ByteString.Internal.$36$WPS () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$f$35$$35$a3Tg0$35$$35$k_$35$$35$2061 () Int)
(declare-fun GHC.Base.$36$fFunctorIO () Int)
(declare-fun lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1915 () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 () Int)
(declare-fun GHC.Unicode.Surrogate () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun InterfaceAdapters.Utils.Helper.SomeIOError () Int)
(declare-fun GHC.Float.$36$fShowFloat () Int)
(declare-fun Data.Text.Encoding.Error.DecodeError () Int)
(declare-fun Data.Aeson.Types.FromJSON.C$58$FromJSONKey () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721146$35$$35$d3Tiq () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun GHC.Int.I64$35$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2220 () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun GHC.Unicode.MathSymbol () Int)
(declare-fun GHC.Unicode.SpacingCombiningMark () Int)
(declare-fun geoipstuff$35$$35$a3Tg3 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun GHC.Unicode.ConnectorPunctuation () Int)
(declare-fun tail () Int)
(declare-fun lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1915 () Str)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun Data.Text.Internal.Lazy.Chunk () Int)
(declare-fun Data.ByteString.Lazy.Internal.Chunk () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun Data.Aeson.Types.ToJSON.C$58$ToJSON () Int)
(declare-fun GHC.Unicode.OtherSymbol () Int)
(declare-fun isJust () Int)
(declare-fun Data.Time.Clock.Internal.UTCTime.UTCTime () Int)
(declare-fun lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 () Int)
(declare-fun InterfaceAdapters.Utils.Helper.MissingEnvError () Int)
(declare-fun lq_tmp$36$x$35$$35$1876 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun Control.Applicative.WrapMonad () Int)
(declare-fun Data.Functor.$60$$36$$62$ () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun GHC.List.span () Int)
(declare-fun Data.Text.Internal.Lazy.$36$WChunk () Int)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun InterfaceAdapters.IP.GeoIpAPI.Locdata () Int)
(declare-fun Data.Aeson.Key.Key () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic () Int)
(declare-fun GHC.Word.W8$35$ () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.OpenCageLocdata () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721138$35$$35$d3Tii () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij$35$$35$k_$35$$35$2061 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721128$35$$35$d3Ti8 () Str)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.$36$fFromJSONOpenCageForwardGeoData () Int)
(declare-fun f$35$$35$a3Tg0 () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2059 () Int)
(declare-fun GHC.Show.show () Int)
(declare-fun lq_tmp$36$x$35$$35$1755 () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WBool () Int)
(declare-fun GHC.List.last () Int)
(declare-fun Data.Aeson.Types.Internal.Object () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1913 () Int)
(declare-fun Data.Aeson.Types.Internal.Error () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun papp5 () Int)
(declare-fun lq_tmp$36$x$35$$35$2361 () Int)
(declare-fun snd () Int)
(declare-fun lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1913 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif () Int)
(declare-fun InterfaceAdapters.IP.GeoIpAPI.ForwardGeoData () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun GHC.Unicode.Space () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WNumber () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721131$35$$35$d3Tib () Int)
(declare-fun GHC.Generics.C$58$Generic () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.$36$sel$58$geometry$58$OpenCageResultData () Int)
(declare-fun GHC.Base.$62$$62$$61$ () Int)
(declare-fun Data.Aeson.eitherDecode () Int)
(declare-fun GHC.Unicode.TitlecaseLetter () Int)
(declare-fun lq_tmp$36$x$35$$35$1796 () Int)
(declare-fun Data.Aeson.KeyMap.KeyMap () Int)
(declare-fun Data.Aeson.Types.Internal.TwoElemArray () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij () Int)
(declare-fun GHC.Unicode.ClosePunctuation () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$2061 () Str)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_tmp$36$x$35$$35$1776 () Int)
(declare-fun fromJust () Int)
(declare-fun InterfaceAdapters.IP.GeoIpAPI.$36$fFromJSONForwardGeoData () Int)
(declare-fun lq_karg$36$VV$35$$35$1912$35$$35$k_$35$$35$1913 () Int)
(declare-fun lq_tmp$36$x$35$$35$1897 () Int)
(declare-fun lq_tmp$36$x$35$$35$1907 () Int)
(declare-fun Data.Aeson.Types.FromJSON.FromJSONKeyCoerce () Int)
(declare-fun Data.Aeson.Types.Internal.Array () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721153$35$$35$d3Tix () Int)
(declare-fun lq_karg$36$VV$35$$35$2060$35$$35$k_$35$$35$2061 () Int)
(declare-fun lq_karg$36$VV$35$$35$1914$35$$35$k_$35$$35$1915 () Int)
(declare-fun InterfaceAdapters.IP.GeoIpAPI.getPositionStackForwardGeoCodefor () Int)
(declare-fun GHC.Unicode.FinalQuote () Int)
(declare-fun GHC.Unicode.PrivateUse () Int)
(declare-fun town$35$$35$a3TfX () Str)
(declare-fun lq_tmp$36$x$35$$35$1726 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721142$35$$35$d3Tim () Real)
(declare-fun lq_anf$36$$35$$35$7205759403793721133$35$$35$d3Tid () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun Data.Text.Internal.Text () Int)
(declare-fun GHC.Unicode.OtherLetter () Int)
(declare-fun lq_tmp$36$x$35$$35$2186 () Int)
(declare-fun Data.ByteString.Internal.PS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721141$35$$35$d3Til () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721149$35$$35$d3Tit () Real)
(declare-fun Data.Aeson.Types.Internal.Index () Int)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$2061 () Str)
(declare-fun addrLen () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun GHC.Unicode.EnclosingMark () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1915 () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun Data.Aeson.Types.ToJSON.C$58$ToJSONKey () Int)
(declare-fun Data.Aeson.Types.Internal.Bool () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun Data.Text.pack () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Unicode.UppercaseLetter () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lit$36$$44$ () Str)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.OpenCageResultData () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Str)
(declare-fun Data.Scientific.Scientific () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721144$35$$35$d3Tio () Str)
(declare-fun Data.Aeson.Types.Internal.String () Int)
(declare-fun lq_tmp$36$x$35$$35$1917 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1794 () Str)
(declare-fun GHC.Unicode.OtherPunctuation () Int)
(declare-fun GHC.List.init () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Unicode.LineSeparator () Int)
(declare-fun GHC.List.break () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721140$35$$35$d3Tik () Int)
(declare-fun InterfaceAdapters.IP.GeoLatLong.getLatLongforThis () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun GHC.Unicode.CurrencySymbol () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun Data.Aeson.Types.FromJSON.C$58$FromJSON () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun InterfaceAdapters.IP.GeoIpAPI.$36$sel$58$_data$58$ForwardGeoData () Int)
(declare-fun GHC.Unicode.ModifierLetter () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WIndex () Int)
(declare-fun d$35$$35$a3TfY () Int)
(declare-fun cast_as () Int)
(declare-fun Data.Text.Internal.$36$WText () Int)
(declare-fun GHC.List.head () Int)
(declare-fun Data.ByteString.Lazy.Internal.$36$WChunk () Int)
(declare-fun cast_as_int () Int)
(declare-fun lit$36$MaximumCity$45$0.9.9$45$1cM3QmEFibB5uksrpD7U8M () Str)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1913 () Str)
(declare-fun GHC.Types.F$35$ () Int)
(declare-fun GHC.Base.$36$fMonadIO () Int)
(declare-fun GHC.Unicode.ParagraphSeparator () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WObject () Int)
(declare-fun len () Int)
(declare-fun Data.Aeson.Types.Internal.Key () Int)
(declare-fun GHC.Unicode.LetterNumber () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.$36$sel$58$lng$58$OpenCageLocdata () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721158$35$$35$d3TiC () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp1 () Int)
(declare-fun GHC.Unicode.LowercaseLetter () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_karg$36$VV$35$$35$1791$35$$35$k_$35$$35$1792 () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.$36$sel$58$results$58$OpenCageForwardGeoData () Int)
(declare-fun papp6 () Int)
(declare-fun lq_tmp$36$x$35$$35$1994 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1792 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403793721145$35$$35$d3Tip () Str)
(declare-fun GHC.Unicode.OtherNumber () Int)
(declare-fun Data.Functor.Const.Const () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.OpenCageForwardGeoData () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721126$35$$35$d3Ti6 () Str)
(declare-fun Data.ByteString.Lazy.Internal.Empty () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721134$35$$35$d3Tie () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun GHC.Unicode.OpenPunctuation () Int)
(declare-fun lit$36$InterfaceAdapters.IP.GeoLatLong () Str)
(declare-fun Data.Text.Internal.Lazy.Empty () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721130$35$$35$d3Tia () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif$35$$35$k_$35$$35$2061 () Int)
(declare-fun InterfaceAdapters.IP.GeoIpAPI.$36$fShowLocdata () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun GHC.Unicode.Format () Int)
(declare-fun lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1913 () Str)
(declare-fun Data.Vector.Vector () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_tmp$36$x$35$$35$2221 () Int)
(declare-fun Data.Vector.$36$WVector () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WArray () Int)
(declare-fun Data.Aeson.Types.Internal.Null () Int)
(declare-fun lq_tmp$36$x$35$$35$2307 () Int)
(declare-fun lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$2061 () Int)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 () Str)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 () Str)
(declare-fun InterfaceAdapters.IP.GeoLatLong.$36$trModule () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721154$35$$35$d3Tiy () Int)
(declare-fun Data.Aeson.Types.Internal.ObjectWithSingleField () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun fst () Int)
(declare-fun InterfaceAdapters.Utils.Helper.EmptyKeyError () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$2061 () Int)
(declare-fun lq_tmp$36$x$35$$35$2128 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun GHC.Unicode.ModifierSymbol () Int)
(declare-fun geo_backup$35$$35$a3Tg2 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1915 () Str)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun Data.Aeson.Encoding.Internal.Empty () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun Data.Text.$36$fIsStringText () Int)
(declare-fun autolen () Int)
(declare-fun GHC.Unicode.Control () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun GHC.List.take () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Base.return () Int)
(declare-fun lq_karg$36$geo_backup$35$$35$a3Tg2$35$$35$k_$35$$35$2061 () Int)
(declare-fun Data.Aeson.Types.Internal.Success () Int)
(declare-fun Data.Aeson.Types.Internal.$36$WString () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 () Int)
(declare-fun lq_karg$36$VV$35$$35$1696$35$$35$k_$35$$35$1697 () Int)
(declare-fun lit$36$Fail$58$getLatLongforThis$32$$124$$32$eitherDecode$32$getOpenCageForwardGeoCodefor () Str)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 () Str)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun Data.Aeson.Types.Internal.UntaggedValue () Int)
(declare-fun GHC.Unicode.NotAssigned () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 () Str)
(declare-fun x_Tuple21 () Int)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun Data.Aeson.Types.Internal.DotNetTime () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun Data.Text.Encoding.Error.EncodeError () Int)
(declare-fun head () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun GHC.Unicode.DecimalNumber () Int)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun lq_tmp$36$x$35$$35$1786 () Int)
(declare-fun Control.Applicative.WrapArrow () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_tmp$36$x$35$$35$2345 () Int)
(declare-fun Data.Aeson.Types.Internal.Number () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721143$35$$35$d3Tin () Str)
(declare-fun GHC.Err.error () Int)
(declare-fun InterfaceAdapters.Utils.Helper.removeNonNumbers () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.$36$sel$58$lat$58$OpenCageLocdata () Int)
(declare-fun GHC.Unicode.NonSpacingMark () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721129$35$$35$d3Ti9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403793721127$35$$35$d3Ti7 () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun lq_tmp$36$x$35$$35$2185 () Int)
(declare-fun e$35$$35$a3TfZ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403793721148$35$$35$d3Tis () Int)
(declare-fun InterfaceAdapters.IP.GeoCodeOpenCage.getOpenCageForwardGeoCodefor () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun Data.Scientific.$36$WScientific () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun Control.Applicative.ZipList () Int)
(declare-fun GHC.Unicode.InitialQuote () Int)
(declare-fun lq_tmp$36$x$35$$35$2245 () Int)
(declare-fun papp2 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 () Str)
(declare-fun Data.String.fromString () Int)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lq_karg$36$VV$35$$35$1793$35$$35$k_$35$$35$1794 () Int)
(declare-fun GHC.Unicode.DashPunctuation () Int)
(declare-fun apply$35$$35$21 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$4 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$7 (Int Bool) Real)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int Real) Real)
(declare-fun apply$35$$35$23 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$16 (Int Str) Bool)
(declare-fun apply$35$$35$5 (Int Bool) Int)
(declare-fun apply$35$$35$11 (Int Real) Bool)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Real)
(declare-fun apply$35$$35$13 (Int Real) Str)
(declare-fun apply$35$$35$20 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$15 (Int Str) Int)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Bool) Str)
(declare-fun apply$35$$35$9 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$22 (Int (_ BitVec 32)) Real)
(declare-fun apply$35$$35$14 (Int Real) (_ BitVec 32))
(declare-fun apply$35$$35$17 (Int Str) Real)
(declare-fun apply$35$$35$3 (Int Int) Str)
(declare-fun apply$35$$35$6 (Int Bool) Bool)
(declare-fun apply$35$$35$10 (Int Real) Int)
(declare-fun coerce$35$$35$21 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$4 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$7 (Bool) Real)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$12 (Real) Real)
(declare-fun coerce$35$$35$23 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$16 (Str) Bool)
(declare-fun coerce$35$$35$5 (Bool) Int)
(declare-fun coerce$35$$35$11 (Real) Bool)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Real)
(declare-fun coerce$35$$35$13 (Real) Str)
(declare-fun coerce$35$$35$20 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$15 (Str) Int)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Bool) Str)
(declare-fun coerce$35$$35$9 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$22 ((_ BitVec 32)) Real)
(declare-fun coerce$35$$35$14 (Real) (_ BitVec 32))
(declare-fun coerce$35$$35$17 (Str) Real)
(declare-fun coerce$35$$35$3 (Int) Str)
(declare-fun coerce$35$$35$6 (Bool) Bool)
(declare-fun coerce$35$$35$10 (Real) Int)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Real) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 (Real Real) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$16 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$11 (Real Bool) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Real) Int)
(declare-fun smt_lambda$35$$35$13 (Real Str) Int)
(declare-fun smt_lambda$35$$35$20 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$15 (Str Int) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 32) Real) Int)
(declare-fun smt_lambda$35$$35$14 (Real (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$17 (Str Real) Int)
(declare-fun smt_lambda$35$$35$3 (Int Str) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$10 (Real Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$2$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$3$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$4$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$5$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$6$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$7$35$$35$10 () Real)



(assert (distinct lit$36$Fail$58$getLatLongforThis$32$$124$$32$eitherDecode$32$getOpenCageForwardGeoCodefor lit$36$InterfaceAdapters.IP.GeoLatLong lit$36$MaximumCity$45$0.9.9$45$1cM3QmEFibB5uksrpD7U8M lit$36$$44$))



(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))




(assert (distinct Data.Aeson.Types.Internal.UntaggedValue Data.Aeson.Types.Internal.ObjectWithSingleField Data.Aeson.Types.Internal.TwoElemArray))
(assert (distinct GHC.Types.False GHC.Types.True))

(assert (distinct GHC.Unicode.DashPunctuation GHC.Unicode.InitialQuote GHC.Unicode.NonSpacingMark GHC.Unicode.DecimalNumber GHC.Unicode.NotAssigned GHC.Unicode.Control GHC.Unicode.ModifierSymbol GHC.Unicode.Format GHC.Unicode.OpenPunctuation GHC.Unicode.OtherNumber GHC.Unicode.LowercaseLetter GHC.Unicode.LetterNumber GHC.Unicode.ParagraphSeparator GHC.Unicode.ModifierLetter GHC.Unicode.CurrencySymbol GHC.Unicode.LineSeparator GHC.Unicode.OtherPunctuation GHC.Unicode.UppercaseLetter GHC.Unicode.EnclosingMark GHC.Unicode.OtherLetter GHC.Unicode.PrivateUse GHC.Unicode.FinalQuote GHC.Unicode.ClosePunctuation GHC.Unicode.TitlecaseLetter GHC.Unicode.Space GHC.Unicode.OtherSymbol GHC.Unicode.ConnectorPunctuation GHC.Unicode.SpacingCombiningMark GHC.Unicode.MathSymbol GHC.Unicode.Surrogate))

(assert (= (strLen lit$36$$44$) 1))
(assert (= (strLen lit$36$MaximumCity$45$0.9.9$45$1cM3QmEFibB5uksrpD7U8M) 40))
(assert (= (strLen lit$36$InterfaceAdapters.IP.GeoLatLong) 31))
(assert (= (strLen lit$36$Fail$58$getLatLongforThis$32$$124$$32$eitherDecode$32$getOpenCageForwardGeoCodefor) 66))
(push 1)
(define-fun b$36$$35$$35$193 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij) 0))
(define-fun b$36$$35$$35$197 () Bool (>= (apply$35$$35$15 (as len Int) lq_anf$36$$35$$35$7205759403793721143$35$$35$d3Tin) 0))
(define-fun b$36$$35$$35$198 () Bool (= lq_anf$36$$35$$35$7205759403793721144$35$$35$d3Tio lit$36$$44$))
(define-fun b$36$$35$$35$167 () Bool (= lq_anf$36$$35$$35$7205759403793721126$35$$35$d3Ti6 lit$36$MaximumCity$45$0.9.9$45$1cM3QmEFibB5uksrpD7U8M))
(define-fun b$36$$35$$35$199 () Bool (and (= (apply$35$$35$15 (as len Int) lq_anf$36$$35$$35$7205759403793721145$35$$35$d3Tip) (strLen lq_anf$36$$35$$35$7205759403793721144$35$$35$d3Tio)) (>= (apply$35$$35$15 (as len Int) lq_anf$36$$35$$35$7205759403793721145$35$$35$d3Tip) 0) (= lq_anf$36$$35$$35$7205759403793721145$35$$35$d3Tip lq_anf$36$$35$$35$7205759403793721144$35$$35$d3Tio)))
(define-fun b$36$$35$$35$200 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403793721146$35$$35$d3Tiq) 0))
(define-fun b$36$$35$$35$169 () Bool (= lq_anf$36$$35$$35$7205759403793721128$35$$35$d3Ti8 lit$36$InterfaceAdapters.IP.GeoLatLong))
(define-fun b$36$$35$$35$172 () Bool (>= (apply$35$$35$15 (as len Int) town$35$$35$a3TfX) 0))
(define-fun b$36$$35$$35$240 () Bool (and (= VV$35$$35$F$35$$35$4 lq_anf$36$$35$$35$7205759403793721154$35$$35$d3Tiy) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$4) 0)))
(define-fun b$36$$35$$35$241 () Bool (and (= VV$35$$35$F$35$$35$15 lq_anf$36$$35$$35$7205759403793721146$35$$35$d3Tiq) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$15) 0)))
(define-fun b$36$$35$$35$242 () Bool (and (= VV$35$$35$F$35$$35$17 lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$17) 0)))
(define-fun b$36$$35$$35$211 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403793721154$35$$35$d3Tiy) 0))
(define-fun b$36$$35$$35$249 () Bool (>= (apply$35$$35$15 (as len Int) VV$35$$35$F$35$$35$30) 0))
(define-fun b$36$$35$$35$124 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$127 () Bool GHC.Types.True)
(push 1)
(assert (and true b$36$$35$$35$167 b$36$$35$$35$169 b$36$$35$$35$124 b$36$$35$$35$127))
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_tmp$36$x$35$$35$1783 Int) (lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 Str)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 lq_tmp$36$x$35$$35$1776) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1783 lq_tmp$36$x$35$$35$1776) (exists ((VV$35$$35$F$35$$35$28 Int)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 VV$35$$35$F$35$$35$28) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX))))) b$36$$35$$35$172 b$36$$35$$35$124 b$36$$35$$35$127))
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 Int) (lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 Int) (lq_tmp$36$x$35$$35$1904 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 Str) (lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 Int) (lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 Str)) (and (= lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 lq_tmp$36$x$35$$35$1897) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1904 lq_tmp$36$x$35$$35$1897) (exists ((VV$35$$35$F$35$$35$22 Int)) (and (= lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 VV$35$$35$F$35$$35$22) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 town$35$$35$a3TfX))))) (exists ((lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 Str) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 Str) (lq_tmp$36$x$35$$35$1831 Str)) (and (= lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 e$35$$35$a3TfZ) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1831 e$35$$35$a3TfZ) (exists ((lq_tmp$36$x$35$$35$1776 Int) (VV$35$$35$F$35$$35$30 Str)) (and (exists ((lq_tmp$36$x$35$$35$1783 Int) (lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 Str)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 lq_tmp$36$x$35$$35$1776) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1783 lq_tmp$36$x$35$$35$1776) (exists ((VV$35$$35$F$35$$35$28 Int)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 VV$35$$35$F$35$$35$28) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX))))) (>= (apply$35$$35$15 (as len Int) VV$35$$35$F$35$$35$30) 0) (= lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 VV$35$$35$F$35$$35$30) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 town$35$$35$a3TfX)))))) b$36$$35$$35$172 (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (>= (apply$35$$35$15 (as len Int) e$35$$35$a3TfZ) 0) (and (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic (apply$35$$35$15 (as Data.Either.Left Int) e$35$$35$a3TfZ))) b$36$$35$$35$124 b$36$$35$$35$127))
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(push 1)
(assert (and (exists ((lq_karg$36$VV$35$$35$1791$35$$35$k_$35$$35$1792 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1792 Str) (lq_tmp$36$x$35$$35$2272 Int)) (and (= lq_karg$36$VV$35$$35$1791$35$$35$k_$35$$35$1792 geoipstuff$35$$35$a3Tg3) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1792 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$2272 geoipstuff$35$$35$a3Tg3) (exists ((lq_tmp$36$x$35$$35$1776 Int) (VV$35$$35$F$35$$35$33 Int)) (and (exists ((lq_tmp$36$x$35$$35$1783 Int) (lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 Str)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 lq_tmp$36$x$35$$35$1776) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1783 lq_tmp$36$x$35$$35$1776) (exists ((VV$35$$35$F$35$$35$28 Int)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 VV$35$$35$F$35$$35$28) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX))))) (= lq_karg$36$VV$35$$35$1791$35$$35$k_$35$$35$1792 VV$35$$35$F$35$$35$33) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1792 town$35$$35$a3TfX))))) b$36$$35$$35$172 (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) b$36$$35$$35$240 (and (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic (apply$35$$35$0 (as Data.Either.Right Int) geoipstuff$35$$35$a3Tg3))) b$36$$35$$35$211 b$36$$35$$35$124 b$36$$35$$35$127))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$4) 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$f$35$$35$a3Tg0$35$$35$k_$35$$35$2061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij$35$$35$k_$35$$35$2061 Int) (lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$2061 Str) (lq_karg$36$VV$35$$35$2060$35$$35$k_$35$$35$2061 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$2061 Str) (lq_karg$36$lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif$35$$35$k_$35$$35$2061 Int) (lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$2061 Int) (lq_tmp$36$x$35$$35$2062 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$2061 Int) (lq_karg$36$geo_backup$35$$35$a3Tg2$35$$35$k_$35$$35$2061 Int)) (and (= lq_karg$36$VV$35$$35$2060$35$$35$k_$35$$35$2061 lq_anf$36$$35$$35$7205759403793721140$35$$35$d3Tik) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$2061 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$2061 e$35$$35$a3TfZ) (= lq_karg$36$f$35$$35$a3Tg0$35$$35$k_$35$$35$2061 f$35$$35$a3Tg0) (= lq_karg$36$geo_backup$35$$35$a3Tg2$35$$35$k_$35$$35$2061 geo_backup$35$$35$a3Tg2) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$2061 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif$35$$35$k_$35$$35$2061 lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij$35$$35$k_$35$$35$2061 lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$2061 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$2062 lq_anf$36$$35$$35$7205759403793721140$35$$35$d3Tik) (exists ((VV$35$$35$F$35$$35$18 Int)) (and (= lq_karg$36$VV$35$$35$2060$35$$35$k_$35$$35$2061 VV$35$$35$F$35$$35$18) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$2061 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$2061 e$35$$35$a3TfZ) (= lq_karg$36$f$35$$35$a3Tg0$35$$35$k_$35$$35$2061 f$35$$35$a3Tg0) (= lq_karg$36$geo_backup$35$$35$a3Tg2$35$$35$k_$35$$35$2061 geo_backup$35$$35$a3Tg2) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$2061 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif$35$$35$k_$35$$35$2061 lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij$35$$35$k_$35$$35$2061 lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$2061 town$35$$35$a3TfX))))) (exists ((lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 Str) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 Str) (lq_tmp$36$x$35$$35$1831 Str)) (and (= lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 e$35$$35$a3TfZ) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1831 e$35$$35$a3TfZ) (exists ((lq_tmp$36$x$35$$35$1776 Int) (VV$35$$35$F$35$$35$30 Str)) (and (exists ((lq_tmp$36$x$35$$35$1783 Int) (lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 Str)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 lq_tmp$36$x$35$$35$1776) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1783 lq_tmp$36$x$35$$35$1776) (exists ((VV$35$$35$F$35$$35$28 Int)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 VV$35$$35$F$35$$35$28) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX))))) (>= (apply$35$$35$15 (as len Int) VV$35$$35$F$35$$35$30) 0) (= lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 VV$35$$35$F$35$$35$30) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 town$35$$35$a3TfX))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1913 Int) (lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1913 Int) (lq_karg$36$VV$35$$35$1912$35$$35$k_$35$$35$1913 Int) (lq_tmp$36$x$35$$35$2024 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1913 Str) (lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1913 Str)) (and (= lq_karg$36$VV$35$$35$1912$35$$35$k_$35$$35$1913 geo_backup$35$$35$a3Tg2) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1913 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1913 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1913 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1913 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$2024 geo_backup$35$$35$a3Tg2) (exists ((lq_tmp$36$x$35$$35$1897 Int) (VV$35$$35$F$35$$35$27 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 Int) (lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 Int) (lq_tmp$36$x$35$$35$1904 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 Str) (lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 Int) (lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 Str)) (and (= lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 lq_tmp$36$x$35$$35$1897) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1904 lq_tmp$36$x$35$$35$1897) (exists ((VV$35$$35$F$35$$35$22 Int)) (and (= lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 VV$35$$35$F$35$$35$22) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 town$35$$35$a3TfX))))) (= lq_karg$36$VV$35$$35$1912$35$$35$k_$35$$35$1913 VV$35$$35$F$35$$35$27) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1913 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1913 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1913 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1913 town$35$$35$a3TfX)))))) (and (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif f$35$$35$a3Tg0) (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif (apply$35$$35$0 (as Data.Either.Right Int) geo_backup$35$$35$a3Tg2))) b$36$$35$$35$193 (= lq_anf$36$$35$$35$7205759403793721140$35$$35$d3Tik (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403793721139$35$$35$d3Tij)) b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$200 b$36$$35$$35$172 (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) b$36$$35$$35$241 (>= (apply$35$$35$15 (as len Int) e$35$$35$a3TfZ) 0) (and (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic (apply$35$$35$15 (as Data.Either.Left Int) e$35$$35$a3TfZ))) (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif f$35$$35$a3Tg0) b$36$$35$$35$124 (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif f$35$$35$a3Tg0) b$36$$35$$35$127))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$15) 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 Str) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 Str) (lq_tmp$36$x$35$$35$1831 Str)) (and (= lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 e$35$$35$a3TfZ) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1831 e$35$$35$a3TfZ) (exists ((lq_tmp$36$x$35$$35$1776 Int) (VV$35$$35$F$35$$35$30 Str)) (and (exists ((lq_tmp$36$x$35$$35$1783 Int) (lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 Str)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 lq_tmp$36$x$35$$35$1776) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1783 lq_tmp$36$x$35$$35$1776) (exists ((VV$35$$35$F$35$$35$28 Int)) (and (= lq_karg$36$VV$35$$35$1781$35$$35$k_$35$$35$1782 VV$35$$35$F$35$$35$28) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1782 town$35$$35$a3TfX))))) (>= (apply$35$$35$15 (as len Int) VV$35$$35$F$35$$35$30) 0) (= lq_karg$36$VV$35$$35$1789$35$$35$k_$35$$35$1790 VV$35$$35$F$35$$35$30) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1790 town$35$$35$a3TfX))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1913 Int) (lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1913 Int) (lq_karg$36$VV$35$$35$1912$35$$35$k_$35$$35$1913 Int) (lq_tmp$36$x$35$$35$2024 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1913 Str) (lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1913 Str)) (and (= lq_karg$36$VV$35$$35$1912$35$$35$k_$35$$35$1913 geo_backup$35$$35$a3Tg2) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1913 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1913 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1913 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1913 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$2024 geo_backup$35$$35$a3Tg2) (exists ((lq_tmp$36$x$35$$35$1897 Int) (VV$35$$35$F$35$$35$27 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 Int) (lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 Int) (lq_tmp$36$x$35$$35$1904 Int) (lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 Str) (lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 Int) (lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 Str)) (and (= lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 lq_tmp$36$x$35$$35$1897) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 town$35$$35$a3TfX) (= lq_tmp$36$x$35$$35$1904 lq_tmp$36$x$35$$35$1897) (exists ((VV$35$$35$F$35$$35$22 Int)) (and (= lq_karg$36$VV$35$$35$1902$35$$35$k_$35$$35$1903 VV$35$$35$F$35$$35$22) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1903 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1903 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1903 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1903 town$35$$35$a3TfX))))) (= lq_karg$36$VV$35$$35$1912$35$$35$k_$35$$35$1913 VV$35$$35$F$35$$35$27) (= lq_karg$36$d$35$$35$a3TfY$35$$35$k_$35$$35$1913 d$35$$35$a3TfY) (= lq_karg$36$e$35$$35$a3TfZ$35$$35$k_$35$$35$1913 e$35$$35$a3TfZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic$35$$35$k_$35$$35$1913 lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic) (= lq_karg$36$town$35$$35$a3TfX$35$$35$k_$35$$35$1913 town$35$$35$a3TfX)))))) (and (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif f$35$$35$a3Tg0) (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif (apply$35$$35$0 (as Data.Either.Right Int) geo_backup$35$$35$a3Tg2))) b$36$$35$$35$193 b$36$$35$$35$172 (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (>= (apply$35$$35$15 (as len Int) e$35$$35$a3TfZ) 0) b$36$$35$$35$242 (and (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic d$35$$35$a3TfY) (= lq_anf$36$$35$$35$7205759403793721132$35$$35$d3Tic (apply$35$$35$15 (as Data.Either.Left Int) e$35$$35$a3TfZ))) (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif f$35$$35$a3Tg0) b$36$$35$$35$124 (= lq_anf$36$$35$$35$7205759403793721135$35$$35$d3Tif f$35$$35$a3Tg0) b$36$$35$$35$127))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$17) 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(exit)
