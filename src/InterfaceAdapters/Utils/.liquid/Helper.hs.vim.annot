1:1-1:1::InterfaceAdapters.Utils.Helper.$trModule :: "GHC.Types.Module"
30:1-30:10::InterfaceAdapters.Utils.Helper.maybeHead :: "forall a . [a] -> (GHC.Maybe.Maybe a)"
30:19-30:26::_ :: "{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | not (isJust v)} | VV == Nothing}"
31:19-31:25::GHC.Maybe.Just :: "{VV : forall a .\n      x1:a -> {v : (GHC.Maybe.Maybe a) | isJust v\n                                         && fromJust v == x1\n                                         && lqdc##$select v == x1} | VV == Just}"
31:24-31:25::x :: "{VV : a | VV == x}"
34:1-34:23::InterfaceAdapters.Utils.Helper.isPeriodorCommaorDigit :: "GHC.Types.Char -> GHC.Types.Bool"
34:24-34:25::c :: "GHC.Types.Char"
34:28-34:38::lq_anf$##7205759403793045229 :: "GHC.Types.Bool"
34:29-34:30::c :: "{v : GHC.Types.Char | v == c}"
34:34-34:37::lq_anf$##7205759403793045228 :: "{v : GHC.Types.Char | v == ((lit \"46\" Char) : Char)}"
34:42-34:52::lq_anf$##7205759403793045231 :: "GHC.Types.Bool"
34:43-34:44::c :: "{v : GHC.Types.Char | v == c}"
34:48-34:51::lq_anf$##7205759403793045230 :: "{v : GHC.Types.Char | v == ((lit \"44\" Char) : Char)}"
34:56-34:65::lq_anf$##7205759403793045232 :: "GHC.Types.Bool"
34:64-34:65::c :: "{v : GHC.Types.Char | v == c}"
37:1-37:17::InterfaceAdapters.Utils.Helper.removeNonNumbers :: "[GHC.Types.Char] -> [GHC.Types.Char]"
37:35-37:57::InterfaceAdapters.Utils.Helper.isPeriodorCommaorDigit :: "GHC.Types.Char -> GHC.Types.Bool"
41:1-41:6::InterfaceAdapters.Utils.Helper.catSS :: "[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]"
41:7-41:8::r :: "[GHC.Types.Char]"
41:9-41:10::s :: "[GHC.Types.Char]"
41:14-41:15::r :: "{v : [GHC.Types.Char] | v == r\n                        && len v >= 0}"
41:19-41:20::s :: "{v : [GHC.Types.Char] | v == s\n                        && len v >= 0}"
45:1-45:6::InterfaceAdapters.Utils.Helper.catSF :: "[GHC.Types.Char] -> GHC.Types.Float -> [GHC.Types.Char]"
45:7-45:8::r :: "[GHC.Types.Char]"
45:9-45:10::f :: "GHC.Types.Float"
45:13-45:14::r :: "{v : [GHC.Types.Char] | v == r\n                        && len v >= 0}"
45:18-45:42::lq_anf$##7205759403793045238 :: "[GHC.Types.Char]"
45:29-45:37::lq_anf$##7205759403793045236 :: "{v : (GHC.Maybe.Maybe GHC.Types.Int) | isJust v}"
45:35-45:36::lq_anf$##7205759403793045235 :: "GHC.Types.Int"
45:38-45:39::f :: "{v : GHC.Types.Float | v == f}"
45:40-45:42::_ :: "{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0} | VV == []}"
49:1-49:6::InterfaceAdapters.Utils.Helper.catSI :: "[GHC.Types.Char] -> GHC.Types.Int -> [GHC.Types.Char]"
49:7-49:8::r :: "[GHC.Types.Char]"
49:9-49:10::i :: "GHC.Types.Int"
49:13-49:14::r :: "{v : [GHC.Types.Char] | v == r\n                        && len v >= 0}"
49:18-49:24::lq_anf$##7205759403793045239 :: "[GHC.Types.Char]"
49:23-49:24::i :: "{v : GHC.Types.Int | v == i}"
52:1-52:20::InterfaceAdapters.Utils.Helper.fahrenheitToCelsius :: "GHC.Types.Float -> GHC.Types.Float"
52:21-52:22::f :: "GHC.Types.Float"
52:25-52:32::lq_anf$##7205759403793045242 :: "GHC.Types.Float"
52:26-52:27::lq_anf$##7205759403793045240 :: "{v : GHC.Types.Float | v == (5.0 : real)}"
52:30-52:31::lq_anf$##7205759403793045241 :: "{v : GHC.Types.Float | v == (9.0 : real)}"
52:35-52:43::lq_anf$##7205759403793045244 :: "GHC.Types.Float"
52:36-52:37::f :: "{v : GHC.Types.Float | v == f}"
52:40-52:42::lq_anf$##7205759403793045243 :: "{v : GHC.Types.Float | v == (32.0 : real)}"
66:1-66:16::InterfaceAdapters.Utils.Helper.stanEitherFoldr :: "(Data.Either.Either GHC.Types.Int GHC.Types.Int) -> GHC.Types.Int"
66:33-66:36::lq_anf$##7205759403793045246 :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
66:37-66:38::lq_anf$##7205759403793045248 :: "GHC.Types.Int"
69:1-69:13::InterfaceAdapters.Utils.Helper.getKeyEither :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]) -> [GHC.Types.Char]"
69:25-69:40::lq_anf$##7205759403793045168 :: "{v : GHC.Prim.Addr# | v == \"getKey Error \"}"
70:28-70:31::str :: "{v : [GHC.Types.Char] | v == str\n                        && len v >= 0}"
73:1-73:7::InterfaceAdapters.Utils.Helper.badEnv :: "[GHC.Types.Char] -> [GHC.Types.Char] -> GHC.IO.Exception.IOException -> (GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
73:8-73:10::cs :: "[GHC.Types.Char]"
73:11-73:14::env :: "[GHC.Types.Char]"
73:15-73:17::ex :: "GHC.IO.Exception.IOException"
74:9-74:25::lq_anf$##7205759403793045270 :: "{v : GHC.Types.Bool | (v <=> len env == 0)\n                      && (not v <=> len env > 0)}"
74:22-74:25::env :: "{v : [GHC.Types.Char] | v == env\n                        && len v >= 0}"
75:15-75:18::err :: "[GHC.Types.Char]"
75:21-75:48::lq_anf$##7205759403793045297 :: "[GHC.Types.Char]"
75:52-75:55::env :: "{v : [GHC.Types.Char] | v == env\n                        && len v >= 0}"
75:59-75:63::lq_anf$##7205759403793045299 :: "[GHC.Types.Char]"
75:67-75:69::cs :: "{v : [GHC.Types.Char] | v == cs\n                        && len v >= 0}"
76:11-76:25::lq_anf$##7205759403793045302 :: "(GHC.Types.IO ())"
76:22-76:25::err :: "{v : [GHC.Types.Char] | v == err\n                        && len v >= 0}"
77:11-77:17::_ :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]) -> (GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
77:20-77:24::_ :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char])"
77:27-77:44::lq_anf$##7205759403793045303 :: "InterfaceAdapters.Utils.Helper.EnvError"
77:41-77:44::err :: "{v : [GHC.Types.Char] | v == err\n                        && len v >= 0}"
78:9-78:31::lq_anf$##7205759403793045272 :: "GHC.Types.Bool"
78:29-78:31::ex :: "{v : GHC.IO.Exception.IOException | v == ex}"
79:15-79:18::err :: "[GHC.Types.Char]"
79:21-79:54::lq_anf$##7205759403793045287 :: "[GHC.Types.Char]"
79:58-79:61::env :: "{v : [GHC.Types.Char] | v == env\n                        && len v >= 0}"
79:65-79:69::lq_anf$##7205759403793045289 :: "[GHC.Types.Char]"
79:73-79:75::cs :: "{v : [GHC.Types.Char] | v == cs\n                        && len v >= 0}"
80:11-80:25::lq_anf$##7205759403793045292 :: "(GHC.Types.IO ())"
80:22-80:25::err :: "{v : [GHC.Types.Char] | v == err\n                        && len v >= 0}"
81:11-81:17::_ :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]) -> (GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
81:20-81:24::_ :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char])"
81:27-81:46::lq_anf$##7205759403793045293 :: "InterfaceAdapters.Utils.Helper.EnvError"
81:43-81:46::err :: "{v : [GHC.Types.Char] | v == err\n                        && len v >= 0}"
83:15-83:18::err :: "[GHC.Types.Char]"
83:21-83:41::lq_anf$##7205759403793045274 :: "[GHC.Types.Char]"
83:39-83:41::ex :: "{v : GHC.IO.Exception.IOException | v == ex}"
83:45-83:48::lq_anf$##7205759403793045276 :: "[GHC.Types.Char]"
83:52-83:55::env :: "{v : [GHC.Types.Char] | v == env\n                        && len v >= 0}"
83:59-83:63::lq_anf$##7205759403793045278 :: "[GHC.Types.Char]"
83:67-83:69::cs :: "{v : [GHC.Types.Char] | v == cs\n                        && len v >= 0}"
84:11-84:25::lq_anf$##7205759403793045282 :: "(GHC.Types.IO ())"
84:22-84:25::err :: "{v : [GHC.Types.Char] | v == err\n                        && len v >= 0}"
85:11-85:17::_ :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]) -> (GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
85:20-85:24::_ :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char])"
85:27-85:38::_ :: "InterfaceAdapters.Utils.Helper.EnvError"
85:41-85:44::err :: "{v : [GHC.Types.Char] | v == err\n                        && len v >= 0}"
91:1-91:7::InterfaceAdapters.Utils.Helper.getKey :: "(GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) -> [GHC.Types.Char] -> (GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
91:8-91:11::env :: "[GHC.Types.Char]"
91:14-91:61::_ :: "(GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char])) -> (GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
91:21-91:61::lq_anf$##7205759403793045328 :: "GHC.IO.Exception.IOException -> (GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
91:29-91:56::lq_anf$##7205759403793045327 :: "[GHC.Types.Char]"
91:46-91:55::lq_anf$##7205759403793045326 :: "GHC.Stack.Types.CallStack"
91:57-91:60::env :: "{v : [GHC.Types.Char] | v == env\n                        && len v >= 0}"
91:64-91:69::_ :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char])"
91:74-91:84::lq_anf$##7205759403793045330 :: "(GHC.Types.IO [GHC.Types.Char])"
91:81-91:84::env :: "{v : [GHC.Types.Char] | v == env\n                        && len v >= 0}"
94:9-94:25::InterfaceAdapters.Utils.Helper.orDieonNothing :: "forall a .\n(GHC.Maybe.Maybe a) -> [GHC.Types.Char] -> (Data.Either.Either [GHC.Types.Char] a)"
94:35-94:43::lq_anf$##7205759403793045180 :: "(GHC.Base.Monad (Data.Either.Either [GHC.Types.Char]))"
94:42-94:43::a :: "{VV : a | VV == a}"
95:35-95:46::Data.Either.Left :: "{VV : forall a b . a -> (Data.Either.Either a b) | VV == Left}"
95:40-95:46::ds_d13on :: "{v : [GHC.Types.Char] | len v >= 0}"
98:1-98:4::InterfaceAdapters.Utils.Helper.key :: "[GHC.Types.Char] -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] [GHC.Types.Char]))"
98:5-98:6::k :: "[GHC.Types.Char]"
99:3-99:5::tk :: "(Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char])"
99:9-99:17::_ :: "(GHC.Types.IO (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]))"
99:16-99:17::k :: "{v : [GHC.Types.Char] | v == k\n                        && len v >= 0}"
100:8-100:10::_ :: "{v : (Data.Either.Either InterfaceAdapters.Utils.Helper.EnvError [GHC.Types.Char]) | v == tk}"
101:15-101:19::_ :: "(Data.Either.Either [GHC.Types.Char] [GHC.Types.Char]) -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] [GHC.Types.Char]))"
101:22-101:26::_ :: "(Data.Either.Either [GHC.Types.Char] [GHC.Types.Char])"
101:29-101:36::lq_anf$##7205759403793045334 :: "[GHC.Types.Char]"
101:40-101:41::k :: "{v : [GHC.Types.Char] | v == k\n                        && len v >= 0}"
101:45-101:61::lq_anf$##7205759403793045336 :: "[GHC.Types.Char]"
102:20-102:24::_ :: "(Data.Either.Either [GHC.Types.Char] [GHC.Types.Char]) -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] [GHC.Types.Char]))"
102:27-102:38::lq_anf$##7205759403793045340 :: "(Data.Either.Either [GHC.Types.Char] [GHC.Types.Char])"
102:33-102:38::token :: "{v : [GHC.Types.Char] | v == token\n                        && len v >= 0}"
107:1-107:2::f :: "a -> (GHC.Maybe.Maybe b)"
107:3-107:7::InterfaceAdapters.Utils.Helper.<..> :: "forall a b c .\n(a -> (GHC.Maybe.Maybe b)) -> (b -> (GHC.Maybe.Maybe c)) -> a -> (GHC.Maybe.Maybe c)"
107:8-107:9::g :: "a -> (GHC.Maybe.Maybe b)"
107:13-107:14::x :: "a"
108:8-108:11::lq_anf$##7205759403793045181 :: "(GHC.Maybe.Maybe a)"
108:10-108:11::x :: "{VV : a | VV == x}"
109:16-109:23::_ :: "{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | not (isJust v)} | VV == Nothing}"
110:16-110:20::g :: "a -> (GHC.Maybe.Maybe b)"
110:18-110:20::x' :: "{VV : a | VV == x'}"
113:1-113:15::InterfaceAdapters.Utils.Helper._returnStdFail :: "[GHC.Types.Char] -> [GHC.Types.Char] -> Data.Text.Internal.Text"
113:16-113:30::withinFunction :: "[GHC.Types.Char]"
113:31-113:45::calledFunction :: "[GHC.Types.Char]"
113:48-113:52::_ :: "[GHC.Types.Char] -> Data.Text.Internal.Text"
113:55-113:62::lq_anf$##7205759403793045184 :: "[GHC.Types.Char]"
113:66-113:80::withinFunction :: "{v : [GHC.Types.Char] | v == withinFunction\n                        && len v >= 0}"
113:84-113:89::lq_anf$##7205759403793045186 :: "[GHC.Types.Char]"
113:93-113:107::calledFunction :: "{v : [GHC.Types.Char] | v == calledFunction\n                        && len v >= 0}"
116:1-116:11::InterfaceAdapters.Utils.Helper.logMessage :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
116:12-116:13::s :: "[GHC.Types.Char]"
116:16-116:26::lq_anf$##7205759403793045268 :: "(GHC.Types.IO ())"
116:25-116:26::s :: "{v : [GHC.Types.Char] | v == s\n                        && len v >= 0}"
116:30-116:43::lq_anf$##7205759403793045269 :: "(GHC.Types.IO ())"
116:37-116:43::GHC.IO.StdHandles.stdout :: "{v : GHC.IO.Handle.Types.Handle | v == stdout}"