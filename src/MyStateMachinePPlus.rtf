{
  "Comment": "A Hello World example of the Amazon States Language using Pass states",
  "StartAt": "VerifyIncomingDataForHttp",
  "States": {
    "VerifyIncomingDataForHttp": {
        "Type": "Choice",
        "Choices": [
               {
                   "Variable": "$.firstInteger",
                   "IsPresent": false,
                   "Next": "BadlyFormedNumbersForHttp"
               },
               {
                   "Variable": "$.secondInteger",
                   "IsPresent": false,
                   "Next": "BadlyFormedNumbersForHttp"                  
               },
               {
                    "Variable": "$$.Execution.Name",
                    "IsPresent": false,
                    "Next": "BadlyFormedProxyIpField"
                   },
               {
                  "Not": {
                     "Variable": "$$.Execution.Name",
                     "StringMatches": "*.*.*.*"
                     },
                     "Next": "BadlyFormedProxyIpField"
                   }
              ],
             "Default": "DoTwoDifferentTasksForHttp"
          },
    "BadlyFormedNumbersForHttp": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.body.firstInteger",
          "IsPresent": false,
          "Next": "BadlyFormedNumbersForRest"
        },
        {
          "Variable": "$.body.secondInteger",
          "IsPresent": false,
          "Next": "BadlyFormedNumbersForRest"
        },
        {
          "Variable": "$.headers.X-Forwarded-For",
          "IsPresent": false,
          "Next": "BadlyFormedIpForRest"          
        }
      ],
      "Default": "DoTwoDifferentTasksForRest"
    },
    "BadlyFormedProxyIpField": {
      "Type": "Fail",
      "Cause": "Bad Ip Field",
      "Error": "Error-Bad Input"
    },
    "BadlyFormedNumbersForRest": {
      "Type": "Fail",
      "Cause": "Bad Numbers Field http and Rest",
      "Error": "Error-Bad Input Numbers"    
    },
    "BadlyFormedIpForRest": {
      "Type": "Fail",
      "Cause": "Bad IP Field http and Rest",
      "Error": "Error-Bad Ip"    
    },
    "DoTwoDifferentTasksForRest": {
      "Type": "Parallel",
      "End": true,
      "Branches": [
        {
        "StartAt": "MyWeatherLambdaRest",
        "States": {
            "MyWeatherLambdaRest": {
                     "Type": "Task",
                     "Resource": "arn:aws:lambda:ap-south-1:037551519982:function:Test_IPLocation",
                     "Parameters": {
                       "headers": {
                           "X-Forwarded-For.$" : "$.headers.X-Forwarded-For"
                                  },
                           "body.$": "States.Format('\\{\"firstInteger\":\"Fail\",\"secondInteger\":{}\\}', $.body.secondInteger)"
                               },
			          "Catch": [ {
		                  "ErrorEquals": ["States.ALL"],
		                   "Next": "fallbackWeatherRest"
			              } ],
                      "End": true
                         },
                "fallbackWeatherRest": {
                   "Type": "Fail",
                   "Cause": "Bad JSON Weather Rest",
                   "Error": "Bad Error Weather Rest"
	               }
                }
             },
         {
        "StartAt": "MyKaratsubaLambdaRest",
        "States": {
            "MyKaratsubaLambdaRest": {
                         "Type": "Task",
                         "Resource": "arn:aws:lambda:ap-south-1:037551519982:function:Test-MaximumCity",
                         "Parameters": {
                              "headers": {
                                "X-Forwarded-For.$" : "$.headers.X-Forwarded-For"
                                          },
                                "body.$": "States.JsonToString($.body)"
                                      },
			"Catch": [ {
		            "ErrorEquals": ["States.ALL"],
		            "Next": "fallbackKaratsubaRest"
			         } ],
             "End": true
                  },
              "fallbackKaratsubaRest": {
                 "Type": "Fail",
                 "Cause": "Bad JSON Karatsuba Rest",
                 "Error": "JSON error Karatsuba Rest"
 	              }
              }
         }
        ]
     },
    "DoTwoDifferentTasksForHttp": {
      "Type": "Parallel",
      "End": true,
      "Branches": [
        {
        "StartAt": "MyWeatherLambda",
        "States": {
            "MyWeatherLambda": {
                     "Type": "Task",
                     "Resource": "arn:aws:lambda:ap-south-1:037551519982:function:Test_IPLocation",
                     "Parameters": {
                          "headers": {
                              "X-Forwarded-For.$" : "$$.Execution.Name"
                                    },
                           "body.$": "States.Format('\\{\"firstInteger\":\"Fail\",\"secondInteger\":{}\\}', $.secondInteger)"
                               },
			          "Catch": [ {
		                  "ErrorEquals": ["States.ALL"],
		                   "Next": "fallbackWeather"
			              } ],
                      "End": true
                         },
                "fallbackWeather": {
                   "Type": "Fail",
                   "Cause": "Bad JSON Weather",
                   "Error": "Bad Error Weather"
	               }
                }
             },
         {
        "StartAt": "MyKaratsubaLambda",
        "States": {
            "MyKaratsubaLambda": {
                         "Type": "Task",
                         "Resource": "arn:aws:lambda:ap-south-1:037551519982:function:Test-MaximumCity",
                         "Parameters": {
                              "headers": {
                                "X-Forwarded-For.$" : "$$.Execution.Name"
                                          },
                                "body.$": "States.JsonToString($)"
                                      },
			"Catch": [ {
		            "ErrorEquals": ["States.ALL"],
		            "Next": "fallbackKaratsuba"
			         } ],
             "End": true
                  },
              "fallbackKaratsuba": {
                 "Type": "Fail",
                 "Cause": "Bad JSON Karatsuba",
                 "Error": "JSON error Karatsuba"
 	              }
              }
         }
        ]
     }
   }
}

